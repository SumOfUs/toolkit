{"version":3,"sources":["components/EmailForm.js","components/EmailPreview.js","components/CopyContent.js","EmailTool.js"],"names":["EmailForm","props","Field","Input","name","onChange","handleChange","placeholder","value","to","subject","body","EmailPreview","split","map","item","key","Header","onClick","handleDelete","className","aria-label","Body","CopyContent","text","dataAsJSON","onCopy","handleOnCopy","Side","align","Item","copied","EmailTool","emails","JSON","parse","window","localStorage","getItem","state","e","preventDefault","this","newEmail","concat","setState","setItem","stringify","index","filter","_","i","target","email","bind","onSubmit","handleSubmit","output","Component"],"mappings":"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","file":"static/js/10.2790fe55.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Button } from 'react-bulma-components';\nimport Textarea from 'react-bulma-components/lib/components/form/components/textarea';\n\nconst EmailForm = props => {\n  return (\n    <div>\n      <Form.Field>\n        <Form.Input\n          name=\"to\"\n          onChange={props.handleChange}\n          placeholder=\"To\"\n          value={props.to}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Form.Input\n          name=\"subject\"\n          value={props.subject}\n          onChange={props.handleChange}\n          placeholder=\"Subject\"\n        />\n      </Form.Field>\n      <Form.Field>\n        <Textarea\n          name=\"body\"\n          onChange={props.handleChange}\n          placeholder=\"Message\"\n          value={props.body}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Button>Add</Button>\n      </Form.Field>\n    </div>\n  );\n};\n\nexport default EmailForm;\n","import React from 'react';\nimport { Message, Button } from 'react-bulma-components';\n\nconst EmailPreview = props => {\n  const body = props.body.split('\\n').map((item, key) => {\n    return (\n      <span key={key}>\n        {item}\n        <br />\n      </span>\n    );\n  });\n\n  return (\n    <Message>\n      <Message.Header>\n        <p>\n          <strong>To:</strong> {props.to}\n        </p>\n        <Button\n          onClick={props.handleDelete}\n          className=\"delete is-medium\"\n          aria-label=\"delete\"\n        ></Button>\n      </Message.Header>\n      <Message.Body>\n        <p>\n          <strong>Subject:</strong> {props.subject}\n        </p>\n        <br />\n        <p>{body}</p>\n      </Message.Body>\n    </Message>\n  );\n};\n\nexport default EmailPreview;\n","import React from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Form, Level, Button, Tag } from 'react-bulma-components';\n\nconst CopyContent = props => (\n  <CopyToClipboard text={props.dataAsJSON()} onCopy={props.handleOnCopy}>\n    <Form.Field>\n      <Level>\n        <Level.Side align=\"left\">\n          <Level.Item>\n            <Button>Copy to clipboard</Button>\n          </Level.Item>\n          <Level.Item>\n            {props.copied ? <Tag className=\"is-success\">Copied.</Tag> : ''}\n          </Level.Item>\n        </Level.Side>\n      </Level>\n    </Form.Field>\n  </CopyToClipboard>\n);\n\nexport default CopyContent;\n","import React, { Component } from 'react';\nimport { Section } from 'react-bulma-components';\nimport './App.css';\nimport EmailForm from './components/EmailForm';\nimport EmailPreview from './components/EmailPreview';\nimport CopyContent from './components/CopyContent';\n\nclass EmailTool extends Component {\n  constructor(props) {\n    super(props);\n\n    const emails = JSON.parse(\n      window.localStorage.getItem('email-storm:emails') || '[]'\n    );\n\n    this.state = { emails };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { subject, to, body } = this.state;\n    const newEmail = { subject, to, body };\n    const emails = this.state.emails.concat(newEmail);\n\n    this.setState((state, props) => {\n      return {\n        ...state,\n        emails: emails,\n      };\n    });\n\n    window.localStorage.setItem('email-storm:emails', JSON.stringify(emails));\n  }\n\n  handleDelete(index) {\n    const emails = this.state.emails.filter((_, i) => {\n      return i !== index;\n    });\n\n    this.setState({\n      emails: emails,\n    });\n\n    window.localStorage.setItem('email-storm:emails', JSON.stringify(emails));\n  }\n\n  handleChange(e) {\n    const target = e.target;\n    const text = target.value;\n    const name = target.name;\n\n    this.setState((state, props) => {\n      return {\n        ...state,\n        [name]: text,\n      };\n    });\n  }\n\n  output() {\n    let outputText = `<script>\nvar emails = ${JSON.stringify(this.state.emails)};\n</script>`;\n\n    return outputText;\n  }\n\n  handleOnCopy() {\n    this.setState({ copied: true });\n  }\n\n  render() {\n    const emails = this.state.emails.map((email, i) => {\n      return (\n        <EmailPreview\n          {...email}\n          index={i}\n          key={i}\n          handleDelete={this.handleDelete.bind(this, i)}\n        />\n      );\n    });\n\n    return (\n      <div>\n        <Section>\n          <h1 className=\"title\">Email Maker</h1>\n          <form className=\"form\" onSubmit={this.handleSubmit.bind(this)}>\n            <EmailForm\n              handleChange={this.handleChange.bind(this)}\n              {...this.state}\n            />\n          </form>\n        </Section>\n        <Section>{emails}</Section>\n        <Section className=\"raw\">\n          <h2>When you're done, click below to copy your Emails...</h2>\n          <CopyContent\n            dataAsJSON={this.output.bind(this)}\n            handleOnCopy={this.handleOnCopy.bind(this)}\n            handleDelete={this.handleDelete.bind(this)}\n            copied={this.state.copied}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default EmailTool;\n"],"sourceRoot":""}