{"version":3,"sources":["Tweet.js","TweetTool.js"],"names":["Tweet","props","Content","text","small","Side","align","Item","onClick","handleDelete","bind","index","className","TweetTool","console","log","window","localStorage","getItem","tweets","JSON","parse","state","current","valid","currentLength","this","concat","setState","setItem","stringify","e","preventDefault","target","elements","focus","createTweet","filter","tweet","i","currentTarget","value","result","twitter","parseTweet","weightedLength","keyCode","shiftKey","map","key","warningClass","ref","el","myFormRef","onSubmit","handleSubmit","Field","Control","onKeyDown","onEnterPress","autoFocus","onChange","handleChange","tweetsArray","onCopy","copied","Component"],"mappings":"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","file":"static/js/11.e85ba297.chunk.js","sourcesContent":["import React from 'react';\nimport { Content, Icon, Box, Media, Level } from 'react-bulma-components';\n\nconst Tweet = props => (\n  <Box>\n    <Media>\n      <Media.Content>\n        <Content>\n          <p>{props.text}</p>\n        </Content>\n        <Level small=\"true\">\n          <Level.Side align=\"left\">\n            <Level.Item onClick={props.handleDelete.bind(this, props.index)}>\n              <Icon small>\n                <i className=\"fa fa-trash\" />\n              </Icon>\n            </Level.Item>\n          </Level.Side>\n        </Level>\n      </Media.Content>\n    </Media>\n  </Box>\n);\n\nexport default Tweet;\n","import React, { Component } from 'react';\nimport { Tag, Form, Section, Button, Level } from 'react-bulma-components';\n\nimport Textarea from 'react-bulma-components/lib/components/form/components/textarea';\n\nimport './App.css';\nimport Tweet from './Tweet';\nimport twitter from 'twitter-text';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nclass TweetTool extends Component {\n  constructor(props) {\n    super(props);\n    console.log(window.localStorage.getItem('tweet-storm:tweets'));\n    const tweets = JSON.parse(\n      window.localStorage.getItem('tweet-storm:tweets') || '[]'\n    );\n\n    this.state = {\n      tweets: tweets || [],\n      current: '',\n      valid: true,\n      currentLength: 0,\n    };\n  }\n\n  createTweet() {\n    const tweets = this.state.tweets.concat(this.state.current);\n\n    console.log(tweets);\n\n    this.setState({\n      tweets: tweets,\n      current: '',\n      currentLength: 0,\n      valid: true,\n    });\n\n    window.localStorage.setItem('tweet-storm:tweets', JSON.stringify(tweets));\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    e.target.elements[0].focus();\n    this.createTweet();\n  }\n\n  handleDelete(index) {\n    const tweets = this.state.tweets.filter((tweet, i) => {\n      return i !== index;\n    });\n\n    this.setState({\n      tweets: tweets,\n    });\n\n    window.localStorage.setItem(\n      'tweet-storm:tweets',\n      JSON.stringify(tweets, null, 2)\n    );\n  }\n\n  handleChange(e) {\n    const text = e.currentTarget.value;\n    const result = twitter.parseTweet(text);\n    console.log('result =>', result);\n    this.setState({\n      current: text,\n      currentLength: result.weightedLength,\n      valid: result.valid,\n    });\n  }\n\n  tweetsArray() {\n    let outputText = `<script>\n  var tweets = ${JSON.stringify(this.state.tweets)};\n</script>`;\n\n    return outputText;\n  }\n\n  onEnterPress(e) {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      e.preventDefault();\n      this.createTweet();\n    }\n  }\n\n  render() {\n    const tweets = this.state.tweets.map((tweet, i) => {\n      return (\n        <Tweet\n          text={tweet}\n          index={i}\n          key={i}\n          handleDelete={this.handleDelete.bind(this)}\n        />\n      );\n    });\n\n    const warningClass = this.state.valid ? 'is-info' : 'is-danger';\n\n    return (\n      <div>\n        <Section>\n          <h1 className=\"title\">Tweet Maker</h1>\n          <h2>\n            Write a tweet and <strong>press enter</strong>.\n          </h2>\n          <form\n            ref={el => (this.myFormRef = el)}\n            className=\"form\"\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            <Form.Field>\n              <Form.Control>\n                <Textarea\n                  onKeyDown={this.onEnterPress.bind(this)}\n                  autoFocus\n                  className={warningClass}\n                  onChange={this.handleChange.bind(this)}\n                  value={this.state.current}\n                ></Textarea>\n              </Form.Control>\n            </Form.Field>\n            <Form.Field>\n              <Tag className={`is-large ${warningClass}`}>\n                {this.state.currentLength}\n              </Tag>{' '}\n              chars\n            </Form.Field>\n          </form>\n          <div className=\"tweets\">{tweets}</div>\n        </Section>\n\n        <section className=\"section raw\">\n          <h2>When you're done, click below to copy your tweets...</h2>\n          <Form.Field>\n            <Form.Control>\n              <CopyToClipboard\n                text={this.tweetsArray()}\n                onCopy={() => this.setState({ copied: true })}\n              >\n                <Form.Field>\n                  <Level>\n                    <Level.Side align=\"left\">\n                      <Level.Item>\n                        <Button>Copy to clipboard</Button>\n                      </Level.Item>\n                      <Level.Item>\n                        {this.state.copied ? (\n                          <Tag className=\"is-success\">Copied.</Tag>\n                        ) : (\n                          ''\n                        )}\n                      </Level.Item>\n                    </Level.Side>\n                  </Level>\n                </Form.Field>\n              </CopyToClipboard>\n            </Form.Control>\n          </Form.Field>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default TweetTool;\n"],"sourceRoot":""}