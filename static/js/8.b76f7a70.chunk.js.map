{"version":3,"sources":["../node_modules/webpack/buildin/module.js","../node_modules/punycode/punycode.js","../../../../../src/components/form/components/input.js","../node_modules/twitter-text/build/twitter-text.js"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","root","nodeType","freeGlobal","global","window","self","punycode","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","floor","Math","stringFromCharCode","String","fromCharCode","error","type","RangeError","map","array","fn","length","result","mapDomain","string","parts","split","replace","join","ucs2decode","value","extra","output","counter","charCodeAt","push","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","baseMinusTMin","base","decode","input","out","basic","j","index","oldi","w","t","baseMinusT","codePoint","inputLength","n","bias","lastIndexOf","splice","encode","handledCPCount","basicLength","m","q","currentValue","handledCPCountPlusOne","qMinusT","test","slice","toLowerCase","define","colors","concat","CONSTANTS","Input","className","size","color","readOnly","isStatic","disabled","placeholder","name","props","renderAs","modifiers","PropTypes","style","undefined","hasOwnProperty","cashtag","punct","regexSupplant","regex","flags","indexOf","ignoreCase","multiline","source","RegExp","match","newRegex","spacesGroup","spaces","validCashtag","extractCashtagsWithIndices","text","tags","before","dollar","offset","chunk","startPosition","endPosition","indices","hashSigns","endHashtagMatch","validCCTLD","invalidCharsGroup","stringSupplant","str","invalidDomainChars","validDomainChars","validDomainName","validGTLD","validPunycode","validSubdomain","validDomain","validPortNumber","cyrillicLettersAndMarks","latinAccentChars","validGeneralUrlPathChars","validUrlBalancedParens","validUrlPathEndingChars","validUrlPath","validUrlPrecedingChars","validUrlQueryChars","validUrlQueryEndingChars","extractUrl","invalidUrlWithoutProtocolPrecedingChars","validAsciiDomain","idna","domain","substring","labels","label","punycodeEncodedLabel","toASCII","validTcoUrl","DEFAULT_PROTOCOL_OPTIONS","extractUrlsWithoutProtocol","extractUrlsWithIndices","options","arguments","urls","_loop","$2","url","$3","protocol","$4","$5","path","$7","lastIndex","isValidUrl","tcoUrlSlug","$1","lastMatch","lastUrl","asciiEndPosition","asciiDomain","asciiStartPosition","exec","urlLength","punycodeEncodedDomain","removeOverlappingEntities","entities","sort","a","b","prev","astralLetterAndMarks","bmpLetterAndMarks","nonBmpCodePairs","hashtagAlpha","astralNumerals","bmpNumerals","hashtagSpecialChars","hashtagAlphaNumeric","hashtagBoundary","validHashtag","extractHashtagsWithIndices","checkUrlOverlap","hash","hashText","hashtag","atSigns","endMentionMatch","validMentionPrecedingChars","validMentionOrList","extractMentionsOrListsWithIndices","possibleNames","atSign","screenName","slashListname","listSlug","extractEntitiesWithIndices","clone","o","r","BOOLEAN_ATTRIBUTES","OPTIONS_NOT_ATTRIBUTES","extractHtmlAttrsFromOptions","htmlAttrs","v","HTML_ENTITIES","htmlEscape","character","BOOLEAN_ATTRIBUTES$1","tagAttrs","attributes","toString","linkToText","entity","suppressNoFollow","rel","linkAttributeBlock","linkTextBlock","d","attr","linkToTextWithSymbol","symbol","taggedSymbol","symbolTag","taggedText","textWithSymbolTag","usernameIncludeSymbol","linkToCashtag","attrs","href","cashtagUrlBase","title","cashtagClass","targetBlank","target","rtlChars","linkToHashtag","hashtagUrlBase","hashtagClass","charAt","linkTextWithEntity","displayUrl","display_url","expandedUrl","expanded_url","displayUrlSansEllipses","displayUrlIndex","beforeDisplayUrl","substr","afterDisplayUrl","precedingEllipsis","followingEllipsis","invisibleTagAttrs","urlHasProtocol","linkToUrl","linkText","urlEntity","urlEntities","urlClass","urlTarget","linkToMentionAndList","at","user","isList","suppressLists","listClass","usernameClass","listUrlBase","usernameUrlBase","suppressDataScreenName","autoLinkEntities","len","beginIndex","nonEntity","htmlEscapeNonEntities","convertUnicodeIndices","indicesInUTF16","charIndex","codePointIndex","entityIndex","c","modifyIndicesFromUnicodeToUTF16","version2","version","maxWeightedTweetLength","scale","defaultWeight","transformedURLLength","ranges","configs","defaults","version1","extractHashtags","hashtagsOnly","hashtagsWithIndices","extractMentionsWithIndices","mentions","mentionOrList","mentionsOrLists","extractMentions","screenNamesOnly","screenNamesWithIndices","validReply","getCharacterWeight","ch","weight","chCodePoint","Array","isArray","currRange","start","end","invalidChars","hasInvalidCharacters","_extends","AwaitValue","this","AsyncGenerator","gen","front","back","resume","key","arg","Promise","resolve","then","settle","done","err","reject","next","_invoke","request","return","Symbol","asyncIterator","prototype","throw","assign","call","parseTweet","mergedOptions","normalizedText","normalize","urlsWithIndices","tweetLength","weightedLength","validDisplayIndex","valid","_charIndex","filter","_ref","isSurrogatePair","permillage","normalizationOffset","validRangeStart","validRangeEnd","displayRangeStart","displayRangeEnd","cIndex","cNext","getTweetLength","splitTags","firstSplits","secondSplits","allSplits","isInvalidTweet","maxLength","VALID_LIST_RE","validateUrlUnreserved","validateUrlPctEncoded","validateUrlSubDelims","validateUrlUserinfo","validateUrlDomainSegment","validateUrlDomainTld","validateUrlSubDomainSegment","validateUrlDomain","validateUrlDecOctet","validateUrlIpv4","validateUrlIpv6","validateUrlIp","validateUrlHost","validateUrlPort","validateUrlAuthority","validateUrlPchar","validateUrlFragment","validateUrlPath","validateUrlQuery","validateUrlScheme","validateUrlUnencoded","validateUrlUnicodeSubDomainSegment","validateUrlUnicodeDomainSegment","validateUrlUnicodeDomainTld","validateUrlUnicodeDomain","validateUrlUnicodeHost","validateUrlUnicodeAuthority","isValidMatch","optional","varArgs","TypeError","to","nextSource","nextKey","writable","configurable","autoLink","autoLinkCashtags","autoLinkHashtags","autoLinkUrlsCustom","autoLinkUsernamesOrLists","autoLinkWithJSON","json","user_mentions","screen_name","hashtags","symbols","extractCashtags","cashtagsOnly","cashtagsWithIndices","extractReplies","possibleScreenName","rightContext","extractUrls","urlsOnly","getUnicodeTextLength","hitHighlight","hits","tagName","tag","chunks","chunkIndex","prevChunksLen","chunkCursor","startInChunk","chunkChars","flatHits","hit","placed","hitSpot","isValidHashtag","extracted","isValidList","usernameList","isValidTweetText","unicodeDomains","requireProtocol","urlParts","scheme","authority","query","fragment","isValidUsername","username","modifyIndicesFromUTF16ToUnicode","regexen","urlHasHttps","factory","require"],"mappings":"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","file":"static/js/8.b76f7a70.chunk.js","sourcesContent":["module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport modifiers from '../../../modifiers';\nimport CONSTANTS from '../../../constants';\nimport Element from '../../element';\n\nconst colors = [null].concat(Object.keys(CONSTANTS.COLORS).map((key) => CONSTANTS.COLORS[key]));\n\nconst Input = ({\n  className,\n  type,\n  size,\n  color,\n  readOnly,\n  isStatic,\n  disabled,\n  placeholder,\n  value,\n  name,\n  ...props\n}) => (\n  <Element\n    {...props}\n    renderAs=\"input\"\n    name={name}\n    value={value}\n    type={type}\n    placeholder={placeholder}\n    readOnly={readOnly || isStatic}\n    disabled={disabled}\n    className={classnames('input', className, {\n      'is-static': isStatic,\n      [`is-${size}`]: size,\n      [`is-${color}`]: color,\n    })}\n  />\n);\n\nInput.propTypes = {\n  ...modifiers.propTypes,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  type: PropTypes.oneOf(['text', 'email', 'tel', 'password', 'number', 'search', 'color', 'date', 'time', 'datetime-local']),\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  color: PropTypes.oneOf(colors),\n  readOnly: PropTypes.bool,\n  isStatic: PropTypes.bool,\n  disabled: PropTypes.bool,\n  placeholder: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  /**\n   * The name of the input field Commonly used for [multi-input handling](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n   */\n  name: PropTypes.string,\n};\n\nInput.defaultProps = {\n  ...modifiers.defaultProps,\n  className: undefined,\n  value: '',\n  style: undefined,\n  type: 'text',\n  size: undefined,\n  color: undefined,\n  readOnly: false,\n  isStatic: false,\n  disabled: false,\n  placeholder: '',\n  name: undefined,\n};\n\nexport default Input;\n","/*!\n * twitter-text 2.0.5\n *\n * Copyright 2012 Twitter, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this work except in compliance with the License.\n * You may obtain a copy of the License at:\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('punycode')) :\n\ttypeof define === 'function' && define.amd ? define(['punycode'], factory) :\n\t(global.twttr = global.twttr || {}, global.twttr.txt = factory(global.punycode));\n}(this, (function (punycode) { 'use strict';\n\npunycode = punycode && punycode.hasOwnProperty('default') ? punycode['default'] : punycode;\n\nvar cashtag = /[a-z]{1,6}(?:[._][a-z]{1,2})?/i;\n\nvar punct = /\\!'#%&'\\(\\)*\\+,\\\\\\-\\.\\/:;<=>\\?@\\[\\]\\^_{|}~\\$/;\n\n// Builds a RegExp\nvar regexSupplant = function (regex, map, flags) {\n  flags = flags || '';\n  if (typeof regex !== 'string') {\n    if (regex.global && flags.indexOf('g') < 0) {\n      flags += 'g';\n    }\n    if (regex.ignoreCase && flags.indexOf('i') < 0) {\n      flags += 'i';\n    }\n    if (regex.multiline && flags.indexOf('m') < 0) {\n      flags += 'm';\n    }\n\n    regex = regex.source;\n  }\n\n  return new RegExp(regex.replace(/#\\{(\\w+)\\}/g, function (match, name) {\n    var newRegex = map[name] || '';\n    if (typeof newRegex !== 'string') {\n      newRegex = newRegex.source;\n    }\n    return newRegex;\n  }), flags);\n};\n\nvar spacesGroup = /\\x09-\\x0D\\x20\\x85\\xA0\\u1680\\u180E\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000/;\n\nvar spaces = regexSupplant(/[#{spacesGroup}]/, { spacesGroup: spacesGroup });\n\nvar validCashtag = regexSupplant('(^|#{spaces})(\\\\$)(#{cashtag})(?=$|\\\\s|[#{punct}])', { cashtag: cashtag, spaces: spaces, punct: punct }, 'gi');\n\nvar extractCashtagsWithIndices = function (text) {\n  if (!text || text.indexOf('$') === -1) {\n    return [];\n  }\n\n  var tags = [];\n\n  text.replace(validCashtag, function (match, before, dollar, cashtag, offset, chunk) {\n    var startPosition = offset + before.length;\n    var endPosition = startPosition + cashtag.length + 1;\n    tags.push({\n      cashtag: cashtag,\n      indices: [startPosition, endPosition]\n    });\n  });\n\n  return tags;\n};\n\nvar hashSigns = /[#＃]/;\n\nvar endHashtagMatch = regexSupplant(/^(?:#{hashSigns}|:\\/\\/)/, { hashSigns: hashSigns });\n\nvar validCCTLD = regexSupplant(RegExp('(?:(?:' + '한국|香港|澳門|新加坡|台灣|台湾|中國|中国|გე|ไทย|ලංකා|ഭാരതം|ಭಾರತ|భారత్|சிங்கப்பூர்|இலங்கை|இந்தியா|ଭାରତ|ભારત|ਭਾਰਤ|' + 'ভাৰত|ভারত|বাংলা|भारोत|भारतम्|भारत|ڀارت|پاکستان|موريتانيا|مليسيا|مصر|قطر|فلسطين|عمان|عراق|سورية|' + 'سودان|تونس|بھارت|بارت|ایران|امارات|المغرب|السعودية|الجزائر|الاردن|հայ|қаз|укр|срб|рф|мон|мкд|ею|' + 'бел|бг|ελ|zw|zm|za|yt|ye|ws|wf|vu|vn|vi|vg|ve|vc|va|uz|uy|us|um|uk|ug|ua|tz|tw|tv|tt|tr|tp|to|' + 'tn|tm|tl|tk|tj|th|tg|tf|td|tc|sz|sy|sx|sv|su|st|ss|sr|so|sn|sm|sl|sk|sj|si|sh|sg|se|sd|sc|sb|sa|' + 'rw|ru|rs|ro|re|qa|py|pw|pt|ps|pr|pn|pm|pl|pk|ph|pg|pf|pe|pa|om|nz|nu|nr|np|no|nl|ni|ng|nf|ne|nc|' + 'na|mz|my|mx|mw|mv|mu|mt|ms|mr|mq|mp|mo|mn|mm|ml|mk|mh|mg|mf|me|md|mc|ma|ly|lv|lu|lt|ls|lr|lk|li|' + 'lc|lb|la|kz|ky|kw|kr|kp|kn|km|ki|kh|kg|ke|jp|jo|jm|je|it|is|ir|iq|io|in|im|il|ie|id|hu|ht|hr|hn|' + 'hm|hk|gy|gw|gu|gt|gs|gr|gq|gp|gn|gm|gl|gi|gh|gg|gf|ge|gd|gb|ga|fr|fo|fm|fk|fj|fi|eu|et|es|er|eh|' + 'eg|ee|ec|dz|do|dm|dk|dj|de|cz|cy|cx|cw|cv|cu|cr|co|cn|cm|cl|ck|ci|ch|cg|cf|cd|cc|ca|bz|by|bw|bv|' + 'bt|bs|br|bq|bo|bn|bm|bl|bj|bi|bh|bg|bf|be|bd|bb|ba|az|ax|aw|au|at|as|ar|aq|ao|an|am|al|ai|ag|af|' + 'ae|ad|ac' + ')(?=[^0-9a-zA-Z@]|$))'));\n\nvar invalidCharsGroup = /\\uFFFE\\uFEFF\\uFFFF\\u202A-\\u202E/;\n\n// simple string interpolation\nvar stringSupplant = function (str, map) {\n  return str.replace(/#\\{(\\w+)\\}/g, function (match, name) {\n    return map[name] || '';\n  });\n};\n\nvar invalidDomainChars = stringSupplant('#{punct}#{spacesGroup}#{invalidCharsGroup}', { punct: punct, spacesGroup: spacesGroup, invalidCharsGroup: invalidCharsGroup });\n\nvar validDomainChars = regexSupplant(/[^#{invalidDomainChars}]/, { invalidDomainChars: invalidDomainChars });\n\nvar validDomainName = regexSupplant(/(?:(?:#{validDomainChars}(?:-|#{validDomainChars})*)?#{validDomainChars}\\.)/, { validDomainChars: validDomainChars });\n\nvar validGTLD = regexSupplant(RegExp('(?:(?:' + '삼성|닷컴|닷넷|香格里拉|餐厅|食品|飞利浦|電訊盈科|集团|通販|购物|谷歌|诺基亚|联通|网络|网站|网店|网址|组织机构|移动|珠宝|点看|游戏|淡马锡|机构|書籍|时尚|新闻|政府|' + '政务|手表|手机|我爱你|慈善|微博|广东|工行|家電|娱乐|天主教|大拿|大众汽车|在线|嘉里大酒店|嘉里|商标|商店|商城|公益|公司|八卦|健康|信息|佛山|企业|中文网|中信|世界|' + 'ポイント|ファッション|セール|ストア|コム|グーグル|クラウド|みんな|คอม|संगठन|नेट|कॉम|همراه|موقع|موبايلي|كوم|كاثوليك|عرب|شبكة|' + 'بيتك|بازار|العليان|ارامكو|اتصالات|ابوظبي|קום|сайт|рус|орг|онлайн|москва|ком|католик|дети|' + 'zuerich|zone|zippo|zip|zero|zara|zappos|yun|youtube|you|yokohama|yoga|yodobashi|yandex|yamaxun|' + 'yahoo|yachts|xyz|xxx|xperia|xin|xihuan|xfinity|xerox|xbox|wtf|wtc|wow|world|works|work|woodside|' + 'wolterskluwer|wme|winners|wine|windows|win|williamhill|wiki|wien|whoswho|weir|weibo|wedding|wed|' + 'website|weber|webcam|weatherchannel|weather|watches|watch|warman|wanggou|wang|walter|walmart|' + 'wales|vuelos|voyage|voto|voting|vote|volvo|volkswagen|vodka|vlaanderen|vivo|viva|vistaprint|' + 'vista|vision|visa|virgin|vip|vin|villas|viking|vig|video|viajes|vet|versicherung|' + 'vermögensberatung|vermögensberater|verisign|ventures|vegas|vanguard|vana|vacations|ups|uol|uno|' + 'university|unicom|uconnect|ubs|ubank|tvs|tushu|tunes|tui|tube|trv|trust|travelersinsurance|' + 'travelers|travelchannel|travel|training|trading|trade|toys|toyota|town|tours|total|toshiba|' + 'toray|top|tools|tokyo|today|tmall|tkmaxx|tjx|tjmaxx|tirol|tires|tips|tiffany|tienda|tickets|' + 'tiaa|theatre|theater|thd|teva|tennis|temasek|telefonica|telecity|tel|technology|tech|team|tdk|' + 'tci|taxi|tax|tattoo|tatar|tatamotors|target|taobao|talk|taipei|tab|systems|symantec|sydney|' + 'swiss|swiftcover|swatch|suzuki|surgery|surf|support|supply|supplies|sucks|style|study|studio|' + 'stream|store|storage|stockholm|stcgroup|stc|statoil|statefarm|statebank|starhub|star|staples|' + 'stada|srt|srl|spreadbetting|spot|spiegel|space|soy|sony|song|solutions|solar|sohu|software|' + 'softbank|social|soccer|sncf|smile|smart|sling|skype|sky|skin|ski|site|singles|sina|silk|shriram|' + 'showtime|show|shouji|shopping|shop|shoes|shiksha|shia|shell|shaw|sharp|shangrila|sfr|sexy|sex|' + 'sew|seven|ses|services|sener|select|seek|security|secure|seat|search|scot|scor|scjohnson|' + 'science|schwarz|schule|school|scholarships|schmidt|schaeffler|scb|sca|sbs|sbi|saxo|save|sas|' + 'sarl|sapo|sap|sanofi|sandvikcoromant|sandvik|samsung|samsclub|salon|sale|sakura|safety|safe|' + 'saarland|ryukyu|rwe|run|ruhr|rugby|rsvp|room|rogers|rodeo|rocks|rocher|rmit|rip|rio|ril|' + 'rightathome|ricoh|richardli|rich|rexroth|reviews|review|restaurant|rest|republican|report|' + 'repair|rentals|rent|ren|reliance|reit|reisen|reise|rehab|redumbrella|redstone|red|recipes|' + 'realty|realtor|realestate|read|raid|radio|racing|qvc|quest|quebec|qpon|pwc|pub|prudential|pru|' + 'protection|property|properties|promo|progressive|prof|productions|prod|pro|prime|press|praxi|' + 'pramerica|post|porn|politie|poker|pohl|pnc|plus|plumbing|playstation|play|place|pizza|pioneer|' + 'pink|ping|pin|pid|pictures|pictet|pics|piaget|physio|photos|photography|photo|phone|philips|phd|' + 'pharmacy|pfizer|pet|pccw|pay|passagens|party|parts|partners|pars|paris|panerai|panasonic|' + 'pamperedchef|page|ovh|ott|otsuka|osaka|origins|orientexpress|organic|org|orange|oracle|open|ooo|' + 'onyourside|online|onl|ong|one|omega|ollo|oldnavy|olayangroup|olayan|okinawa|office|off|observer|' + 'obi|nyc|ntt|nrw|nra|nowtv|nowruz|now|norton|northwesternmutual|nokia|nissay|nissan|ninja|nikon|' + 'nike|nico|nhk|ngo|nfl|nexus|nextdirect|next|news|newholland|new|neustar|network|netflix|netbank|' + 'net|nec|nba|navy|natura|nationwide|name|nagoya|nadex|nab|mutuelle|mutual|museum|mtr|mtpc|mtn|' + 'msd|movistar|movie|mov|motorcycles|moto|moscow|mortgage|mormon|mopar|montblanc|monster|money|' + 'monash|mom|moi|moe|moda|mobily|mobile|mobi|mma|mls|mlb|mitsubishi|mit|mint|mini|mil|microsoft|' + 'miami|metlife|merckmsd|meo|menu|men|memorial|meme|melbourne|meet|media|med|mckinsey|mcdonalds|' + 'mcd|mba|mattel|maserati|marshalls|marriott|markets|marketing|market|map|mango|management|man|' + 'makeup|maison|maif|madrid|macys|luxury|luxe|lupin|lundbeck|ltda|ltd|lplfinancial|lpl|love|lotto|' + 'lotte|london|lol|loft|locus|locker|loans|loan|lixil|living|live|lipsy|link|linde|lincoln|limo|' + 'limited|lilly|like|lighting|lifestyle|lifeinsurance|life|lidl|liaison|lgbt|lexus|lego|legal|' + 'lefrak|leclerc|lease|lds|lawyer|law|latrobe|latino|lat|lasalle|lanxess|landrover|land|lancome|' + 'lancia|lancaster|lamer|lamborghini|ladbrokes|lacaixa|kyoto|kuokgroup|kred|krd|kpn|kpmg|kosher|' + 'komatsu|koeln|kiwi|kitchen|kindle|kinder|kim|kia|kfh|kerryproperties|kerrylogistics|kerryhotels|' + 'kddi|kaufen|juniper|juegos|jprs|jpmorgan|joy|jot|joburg|jobs|jnj|jmp|jll|jlc|jio|jewelry|jetzt|' + 'jeep|jcp|jcb|java|jaguar|iwc|iveco|itv|itau|istanbul|ist|ismaili|iselect|irish|ipiranga|' + 'investments|intuit|international|intel|int|insure|insurance|institute|ink|ing|info|infiniti|' + 'industries|immobilien|immo|imdb|imamat|ikano|iinet|ifm|ieee|icu|ice|icbc|ibm|hyundai|hyatt|' + 'hughes|htc|hsbc|how|house|hotmail|hotels|hoteles|hot|hosting|host|hospital|horse|honeywell|' + 'honda|homesense|homes|homegoods|homedepot|holiday|holdings|hockey|hkt|hiv|hitachi|hisamitsu|' + 'hiphop|hgtv|hermes|here|helsinki|help|healthcare|health|hdfcbank|hdfc|hbo|haus|hangout|hamburg|' + 'hair|guru|guitars|guide|guge|gucci|guardian|group|grocery|gripe|green|gratis|graphics|grainger|' + 'gov|got|gop|google|goog|goodyear|goodhands|goo|golf|goldpoint|gold|godaddy|gmx|gmo|gmbh|gmail|' + 'globo|global|gle|glass|glade|giving|gives|gifts|gift|ggee|george|genting|gent|gea|gdn|gbiz|' + 'garden|gap|games|game|gallup|gallo|gallery|gal|fyi|futbol|furniture|fund|fun|fujixerox|fujitsu|' + 'ftr|frontier|frontdoor|frogans|frl|fresenius|free|fox|foundation|forum|forsale|forex|ford|' + 'football|foodnetwork|food|foo|fly|flsmidth|flowers|florist|flir|flights|flickr|fitness|fit|' + 'fishing|fish|firmdale|firestone|fire|financial|finance|final|film|fido|fidelity|fiat|ferrero|' + 'ferrari|feedback|fedex|fast|fashion|farmers|farm|fans|fan|family|faith|fairwinds|fail|fage|' + 'extraspace|express|exposed|expert|exchange|everbank|events|eus|eurovision|etisalat|esurance|' + 'estate|esq|erni|ericsson|equipment|epson|epost|enterprises|engineering|engineer|energy|emerck|' + 'email|education|edu|edeka|eco|eat|earth|dvr|dvag|durban|dupont|duns|dunlop|duck|dubai|dtv|drive|' + 'download|dot|doosan|domains|doha|dog|dodge|doctor|docs|dnp|diy|dish|discover|discount|directory|' + 'direct|digital|diet|diamonds|dhl|dev|design|desi|dentist|dental|democrat|delta|deloitte|dell|' + 'delivery|degree|deals|dealer|deal|dds|dclk|day|datsun|dating|date|data|dance|dad|dabur|cyou|' + 'cymru|cuisinella|csc|cruises|cruise|crs|crown|cricket|creditunion|creditcard|credit|courses|' + 'coupons|coupon|country|corsica|coop|cool|cookingchannel|cooking|contractors|contact|consulting|' + 'construction|condos|comsec|computer|compare|company|community|commbank|comcast|com|cologne|' + 'college|coffee|codes|coach|clubmed|club|cloud|clothing|clinique|clinic|click|cleaning|claims|' + 'cityeats|city|citic|citi|citadel|cisco|circle|cipriani|church|chrysler|chrome|christmas|chloe|' + 'chintai|cheap|chat|chase|channel|chanel|cfd|cfa|cern|ceo|center|ceb|cbs|cbre|cbn|cba|catholic|' + 'catering|cat|casino|cash|caseih|case|casa|cartier|cars|careers|career|care|cards|caravan|car|' + 'capitalone|capital|capetown|canon|cancerresearch|camp|camera|cam|calvinklein|call|cal|cafe|cab|' + 'bzh|buzz|buy|business|builders|build|bugatti|budapest|brussels|brother|broker|broadway|' + 'bridgestone|bradesco|box|boutique|bot|boston|bostik|bosch|boots|booking|book|boo|bond|bom|bofa|' + 'boehringer|boats|bnpparibas|bnl|bmw|bms|blue|bloomberg|blog|blockbuster|blanco|blackfriday|' + 'black|biz|bio|bingo|bing|bike|bid|bible|bharti|bet|bestbuy|best|berlin|bentley|beer|beauty|' + 'beats|bcn|bcg|bbva|bbt|bbc|bayern|bauhaus|basketball|baseball|bargains|barefoot|barclays|' + 'barclaycard|barcelona|bar|bank|band|bananarepublic|banamex|baidu|baby|azure|axa|aws|avianca|' + 'autos|auto|author|auspost|audio|audible|audi|auction|attorney|athleta|associates|asia|asda|arte|' + 'art|arpa|army|archi|aramco|arab|aquarelle|apple|app|apartments|aol|anz|anquan|android|analytics|' + 'amsterdam|amica|amfam|amex|americanfamily|americanexpress|alstom|alsace|ally|allstate|allfinanz|' + 'alipay|alibaba|alfaromeo|akdn|airtel|airforce|airbus|aigo|aig|agency|agakhan|africa|afl|' + 'afamilycompany|aetna|aero|aeg|adult|ads|adac|actor|active|aco|accountants|accountant|accenture|' + 'academy|abudhabi|abogado|able|abc|abbvie|abbott|abb|abarth|aarp|aaa|onion' + ')(?=[^0-9a-zA-Z@]|$))'));\n\nvar validPunycode = /(?:xn--[\\-0-9a-z]+)/;\n\nvar validSubdomain = regexSupplant(/(?:(?:#{validDomainChars}(?:[_-]|#{validDomainChars})*)?#{validDomainChars}\\.)/, { validDomainChars: validDomainChars });\n\nvar validDomain = regexSupplant(/(?:#{validSubdomain}*#{validDomainName}(?:#{validGTLD}|#{validCCTLD}|#{validPunycode}))/, { validDomainName: validDomainName, validSubdomain: validSubdomain, validGTLD: validGTLD, validCCTLD: validCCTLD, validPunycode: validPunycode });\n\nvar validPortNumber = /[0-9]+/;\n\nvar cyrillicLettersAndMarks = /\\u0400-\\u04FF/;\n\nvar latinAccentChars = /\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\xFF\\u0100-\\u024F\\u0253\\u0254\\u0256\\u0257\\u0259\\u025B\\u0263\\u0268\\u026F\\u0272\\u0289\\u028B\\u02BB\\u0300-\\u036F\\u1E00-\\u1EFF/;\n\nvar validGeneralUrlPathChars = regexSupplant(/[a-z#{cyrillicLettersAndMarks}0-9!\\*';:=\\+,\\.\\$\\/%#\\[\\]\\-\\u2013_~@\\|&#{latinAccentChars}]/i, { cyrillicLettersAndMarks: cyrillicLettersAndMarks, latinAccentChars: latinAccentChars });\n\n// Allow URL paths to contain up to two nested levels of balanced parens\n//  1. Used in Wikipedia URLs like /Primer_(film)\n//  2. Used in IIS sessions like /S(dfd346)/\n//  3. Used in Rdio URLs like /track/We_Up_(Album_Version_(Edited))/\nvar validUrlBalancedParens = regexSupplant('\\\\(' + '(?:' + '#{validGeneralUrlPathChars}+' + '|' +\n// allow one nested level of balanced parentheses\n'(?:' + '#{validGeneralUrlPathChars}*' + '\\\\(' + '#{validGeneralUrlPathChars}+' + '\\\\)' + '#{validGeneralUrlPathChars}*' + ')' + ')' + '\\\\)', { validGeneralUrlPathChars: validGeneralUrlPathChars }, 'i');\n\n// Valid end-of-path chracters (so /foo. does not gobble the period).\n// 1. Allow =&# for empty URL parameters and other URL-join artifacts\nvar validUrlPathEndingChars = regexSupplant(/[\\+\\-a-z#{cyrillicLettersAndMarks}0-9=_#\\/#{latinAccentChars}]|(?:#{validUrlBalancedParens})/i, { cyrillicLettersAndMarks: cyrillicLettersAndMarks, latinAccentChars: latinAccentChars, validUrlBalancedParens: validUrlBalancedParens });\n\n// Allow @ in a url, but only in the middle. Catch things like http://example.com/@user/\nvar validUrlPath = regexSupplant('(?:' + '(?:' + '#{validGeneralUrlPathChars}*' + '(?:#{validUrlBalancedParens}#{validGeneralUrlPathChars}*)*' + '#{validUrlPathEndingChars}' + ')|(?:@#{validGeneralUrlPathChars}+\\/)' + ')', {\n  validGeneralUrlPathChars: validGeneralUrlPathChars,\n  validUrlBalancedParens: validUrlBalancedParens,\n  validUrlPathEndingChars: validUrlPathEndingChars\n}, 'i');\n\nvar validUrlPrecedingChars = regexSupplant(/(?:[^A-Za-z0-9@＠$#＃#{invalidCharsGroup}]|^)/, { invalidCharsGroup: invalidCharsGroup });\n\nvar validUrlQueryChars = /[a-z0-9!?\\*'@\\(\\);:&=\\+\\$\\/%#\\[\\]\\-_\\.,~|]/i;\n\nvar validUrlQueryEndingChars = /[a-z0-9\\-_&=#\\/]/i;\n\nvar extractUrl = regexSupplant('(' + // $1 total match\n'(#{validUrlPrecedingChars})' + // $2 Preceeding chracter\n'(' + // $3 URL\n'(https?:\\\\/\\\\/)?' + // $4 Protocol (optional)\n'(#{validDomain})' + // $5 Domain(s)\n'(?::(#{validPortNumber}))?' + // $6 Port number (optional)\n'(\\\\/#{validUrlPath}*)?' + // $7 URL Path\n'(\\\\?#{validUrlQueryChars}*#{validUrlQueryEndingChars})?' + // $8 Query String\n')' + ')', { validUrlPrecedingChars: validUrlPrecedingChars, validDomain: validDomain, validPortNumber: validPortNumber, validUrlPath: validUrlPath, validUrlQueryChars: validUrlQueryChars, validUrlQueryEndingChars: validUrlQueryEndingChars }, 'gi');\n\nvar invalidUrlWithoutProtocolPrecedingChars = /[-_.\\/]$/;\n\nvar validAsciiDomain = regexSupplant(/(?:(?:[\\-a-z0-9#{latinAccentChars}]+)\\.)+(?:#{validGTLD}|#{validCCTLD}|#{validPunycode})/gi, { latinAccentChars: latinAccentChars, validGTLD: validGTLD, validCCTLD: validCCTLD, validPunycode: validPunycode });\n\nvar MAX_DOMAIN_LABEL_LENGTH = 63;\nvar PUNYCODE_ENCODED_DOMAIN_PREFIX = 'xn--';\n// This is an extremely lightweight implementation of domain name validation according to RFC 3490\n// Our regexes handle most of the cases well enough\n// See https://tools.ietf.org/html/rfc3490#section-4.1 for details\nvar idna = {\n  toAscii: function toAscii(domain) {\n    if (domain.substring(0, 4) === PUNYCODE_ENCODED_DOMAIN_PREFIX && !domain.match(validAsciiDomain)) {\n      // Punycode encoded url cannot contain non ASCII characters\n      return;\n    }\n\n    var labels = domain.split('.');\n    for (var i = 0; i < labels.length; i++) {\n      var label = labels[i];\n      var punycodeEncodedLabel = punycode.toASCII(label);\n      if (punycodeEncodedLabel.length < 1 || punycodeEncodedLabel.length > MAX_DOMAIN_LABEL_LENGTH) {\n        // DNS label has invalid length\n        return;\n      }\n    }\n    return labels.join('.');\n  }\n};\n\nvar validTcoUrl = /^https?:\\/\\/t\\.co\\/([a-z0-9]+)/i;\n\nvar DEFAULT_PROTOCOL = 'https://';\nvar DEFAULT_PROTOCOL_OPTIONS = { extractUrlsWithoutProtocol: true };\nvar MAX_URL_LENGTH = 4096;\nvar MAX_TCO_SLUG_LENGTH = 40;\n\nvar extractUrlsWithIndices = function extractUrlsWithIndices(text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_PROTOCOL_OPTIONS;\n\n  if (!text || (options.extractUrlsWithoutProtocol ? !text.match(/\\./) : !text.match(/:/))) {\n    return [];\n  }\n\n  var urls = [];\n\n  var _loop = function _loop() {\n    var before = RegExp.$2;\n    var url = RegExp.$3;\n    var protocol = RegExp.$4;\n    var domain = RegExp.$5;\n    var path = RegExp.$7;\n    var endPosition = extractUrl.lastIndex;\n    var startPosition = endPosition - url.length;\n\n    if (!isValidUrl(url, protocol || DEFAULT_PROTOCOL, domain)) {\n      return 'continue';\n    }\n    // extract ASCII-only domains.\n    if (!protocol) {\n      if (!options.extractUrlsWithoutProtocol || before.match(invalidUrlWithoutProtocolPrecedingChars)) {\n        return 'continue';\n      }\n\n      var lastUrl = null;\n      var asciiEndPosition = 0;\n      domain.replace(validAsciiDomain, function (asciiDomain) {\n        var asciiStartPosition = domain.indexOf(asciiDomain, asciiEndPosition);\n        asciiEndPosition = asciiStartPosition + asciiDomain.length;\n        lastUrl = {\n          url: asciiDomain,\n          indices: [startPosition + asciiStartPosition, startPosition + asciiEndPosition]\n        };\n        urls.push(lastUrl);\n      });\n\n      // no ASCII-only domain found. Skip the entire URL.\n      if (lastUrl == null) {\n        return 'continue';\n      }\n\n      // lastUrl only contains domain. Need to add path and query if they exist.\n      if (path) {\n        lastUrl.url = url.replace(domain, lastUrl.url);\n        lastUrl.indices[1] = endPosition;\n      }\n    } else {\n      // In the case of t.co URLs, don't allow additional path characters.\n      if (url.match(validTcoUrl)) {\n        var tcoUrlSlug = RegExp.$1;\n        if (tcoUrlSlug && tcoUrlSlug.length > MAX_TCO_SLUG_LENGTH) {\n          return 'continue';\n        } else {\n          url = RegExp.lastMatch;\n          endPosition = startPosition + url.length;\n        }\n      }\n      urls.push({\n        url: url,\n        indices: [startPosition, endPosition]\n      });\n    }\n  };\n\n  while (extractUrl.exec(text)) {\n    var _ret = _loop();\n\n    if (_ret === 'continue') continue;\n  }\n\n  return urls;\n};\n\nvar isValidUrl = function isValidUrl(url, protocol, domain) {\n  var urlLength = url.length;\n  var punycodeEncodedDomain = idna.toAscii(domain);\n  if (!punycodeEncodedDomain || !punycodeEncodedDomain.length) {\n    return false;\n  }\n\n  urlLength = urlLength + punycodeEncodedDomain.length - domain.length;\n  return protocol.length + urlLength <= MAX_URL_LENGTH;\n};\n\nvar removeOverlappingEntities = function (entities) {\n  entities.sort(function (a, b) {\n    return a.indices[0] - b.indices[0];\n  });\n\n  var prev = entities[0];\n  for (var i = 1; i < entities.length; i++) {\n    if (prev.indices[1] > entities[i].indices[0]) {\n      entities.splice(i, 1);\n      i--;\n    } else {\n      prev = entities[i];\n    }\n  }\n};\n\n// Generated from unicode_regex/unicode_regex_groups.scala, same as objective c's \\p{L}\\p{M}\nvar astralLetterAndMarks = /\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\uddfd\\ude80-\\ude9c\\udea0-\\uded0\\udee0\\udf00-\\udf1f\\udf30-\\udf40\\udf42-\\udf49\\udf50-\\udf7a\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf]|\\ud801[\\udc00-\\udc9d\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe\\uddbf\\ude00-\\ude03\\ude05\\ude06\\ude0c-\\ude13\\ude15-\\ude17\\ude19-\\ude33\\ude38-\\ude3a\\ude3f\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee6\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48]|\\ud804[\\udc00-\\udc46\\udc7f-\\udcba\\udcd0-\\udce8\\udd00-\\udd34\\udd50-\\udd73\\udd76\\udd80-\\uddc4\\uddda\\ude00-\\ude11\\ude13-\\ude37\\udeb0-\\udeea\\udf01-\\udf03\\udf05-\\udf0c\\udf0f\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32\\udf33\\udf35-\\udf39\\udf3c-\\udf44\\udf47\\udf48\\udf4b-\\udf4d\\udf57\\udf5d-\\udf63\\udf66-\\udf6c\\udf70-\\udf74]|\\ud805[\\udc80-\\udcc5\\udcc7\\udd80-\\uddb5\\uddb8-\\uddc0\\ude00-\\ude40\\ude44\\ude80-\\udeb7]|\\ud806[\\udca0-\\udcdf\\udcff\\udec0-\\udef8]|\\ud808[\\udc00-\\udf98]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\uded0-\\udeed\\udef0-\\udef4\\udf00-\\udf36\\udf40-\\udf43\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\udf00-\\udf44\\udf50-\\udf7e\\udf8f-\\udf9f]|\\ud82c[\\udc00\\udc01]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99\\udc9d\\udc9e]|\\ud834[\\udd65-\\udd69\\udd6d-\\udd72\\udd7b-\\udd82\\udd85-\\udd8b\\uddaa-\\uddad\\ude42-\\ude44]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e\\udc9f\\udca2\\udca5\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb]|\\ud83a[\\udc00-\\udcc4\\udcd0-\\udcd6]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d]|\\ud87e[\\udc00-\\ude1d]|\\udb40[\\udd00-\\uddef]/;\n\n// Generated from unicode_regex/unicode_regex_groups.scala, same as objective c's \\p{L}\\p{M}\nvar bmpLetterAndMarks = /A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u065f\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07ca-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0-\\u08b2\\u08e4-\\u0963\\u0971-\\u0983\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc\\u09dd\\u09df-\\u09e3\\u09f0\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a70-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5c\\u0b5d\\u0b5f-\\u0b63\\u0b71\\u0b82\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0c00-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c58\\u0c59\\u0c60-\\u0c63\\u0c81-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0cf1\\u0cf2\\u0d01-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d7a-\\u0d7f\\u0d82\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0edc-\\u0edf\\u0f00\\u0f18\\u0f19\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u103f\\u1050-\\u108f\\u109a-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16f1-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772\\u1773\\u1780-\\u17d3\\u17d7\\u17dc\\u17dd\\u180b-\\u180d\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f\\u1aa7\\u1ab0-\\u1abe\\u1b00-\\u1b4b\\u1b6b-\\u1b73\\u1b80-\\u1baf\\u1bba-\\u1bf3\\u1c00-\\u1c37\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1cf8\\u1cf9\\u1d00-\\u1df5\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2183\\u2184\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005\\u3006\\u302a-\\u302f\\u3031-\\u3035\\u303b\\u303c\\u3041-\\u3096\\u3099\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua672\\ua674-\\ua67d\\ua67f-\\ua69d\\ua69f-\\ua6e5\\ua6f0\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua7ad\\ua7b0\\ua7b1\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8e0-\\ua8f7\\ua8fb\\ua90a-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf\\ua9e0-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab5f\\uab64\\uab65\\uabc0-\\uabea\\uabec\\uabed\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf870-\\uf87f\\uf882\\uf884-\\uf89f\\uf8b8\\uf8c1-\\uf8d6\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2d\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc/;\n\nvar nonBmpCodePairs = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/mg;\n\n// A hashtag must contain at least one unicode letter or mark, as well as numbers, underscores, and select special characters.\nvar hashtagAlpha = regexSupplant(/(?:[#{bmpLetterAndMarks}]|(?=#{nonBmpCodePairs})(?:#{astralLetterAndMarks}))/, { bmpLetterAndMarks: bmpLetterAndMarks, nonBmpCodePairs: nonBmpCodePairs, astralLetterAndMarks: astralLetterAndMarks });\n\nvar astralNumerals = /\\ud801[\\udca0-\\udca9]|\\ud804[\\udc66-\\udc6f\\udcf0-\\udcf9\\udd36-\\udd3f\\uddd0-\\uddd9\\udef0-\\udef9]|\\ud805[\\udcd0-\\udcd9\\ude50-\\ude59\\udec0-\\udec9]|\\ud806[\\udce0-\\udce9]|\\ud81a[\\ude60-\\ude69\\udf50-\\udf59]|\\ud835[\\udfce-\\udfff]/;\n\nvar bmpNumerals = /0-9\\u0660-\\u0669\\u06f0-\\u06f9\\u07c0-\\u07c9\\u0966-\\u096f\\u09e6-\\u09ef\\u0a66-\\u0a6f\\u0ae6-\\u0aef\\u0b66-\\u0b6f\\u0be6-\\u0bef\\u0c66-\\u0c6f\\u0ce6-\\u0cef\\u0d66-\\u0d6f\\u0de6-\\u0def\\u0e50-\\u0e59\\u0ed0-\\u0ed9\\u0f20-\\u0f29\\u1040-\\u1049\\u1090-\\u1099\\u17e0-\\u17e9\\u1810-\\u1819\\u1946-\\u194f\\u19d0-\\u19d9\\u1a80-\\u1a89\\u1a90-\\u1a99\\u1b50-\\u1b59\\u1bb0-\\u1bb9\\u1c40-\\u1c49\\u1c50-\\u1c59\\ua620-\\ua629\\ua8d0-\\ua8d9\\ua900-\\ua909\\ua9d0-\\ua9d9\\ua9f0-\\ua9f9\\uaa50-\\uaa59\\uabf0-\\uabf9\\uff10-\\uff19/;\n\nvar hashtagSpecialChars = /_\\u200c\\u200d\\ua67e\\u05be\\u05f3\\u05f4\\uff5e\\u301c\\u309b\\u309c\\u30a0\\u30fb\\u3003\\u0f0b\\u0f0c\\xb7/;\n\nvar hashtagAlphaNumeric = regexSupplant(/(?:[#{bmpLetterAndMarks}#{bmpNumerals}#{hashtagSpecialChars}]|(?=#{nonBmpCodePairs})(?:#{astralLetterAndMarks}|#{astralNumerals}))/, { bmpLetterAndMarks: bmpLetterAndMarks, bmpNumerals: bmpNumerals, hashtagSpecialChars: hashtagSpecialChars, nonBmpCodePairs: nonBmpCodePairs, astralLetterAndMarks: astralLetterAndMarks, astralNumerals: astralNumerals });\n\nvar codePoint = /(?:[^\\uD800-\\uDFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/;\n\nvar hashtagBoundary = regexSupplant(/(?:^|\\uFE0E|\\uFE0F|$|(?!#{hashtagAlphaNumeric}|&)#{codePoint})/, { codePoint: codePoint, hashtagAlphaNumeric: hashtagAlphaNumeric });\n\nvar validHashtag = regexSupplant(/(#{hashtagBoundary})(#{hashSigns})(?!\\uFE0F|\\u20E3)(#{hashtagAlphaNumeric}*#{hashtagAlpha}#{hashtagAlphaNumeric}*)/gi, { hashtagBoundary: hashtagBoundary, hashSigns: hashSigns, hashtagAlphaNumeric: hashtagAlphaNumeric, hashtagAlpha: hashtagAlpha });\n\nvar extractHashtagsWithIndices = function extractHashtagsWithIndices(text, options) {\n  if (!options) {\n    options = { checkUrlOverlap: true };\n  }\n\n  if (!text || !text.match(hashSigns)) {\n    return [];\n  }\n\n  var tags = [];\n\n  text.replace(validHashtag, function (match, before, hash, hashText, offset, chunk) {\n    var after = chunk.slice(offset + match.length);\n    if (after.match(endHashtagMatch)) {\n      return;\n    }\n    var startPosition = offset + before.length;\n    var endPosition = startPosition + hashText.length + 1;\n    tags.push({\n      hashtag: hashText,\n      indices: [startPosition, endPosition]\n    });\n  });\n\n  if (options.checkUrlOverlap) {\n    // also extract URL entities\n    var urls = extractUrlsWithIndices(text);\n    if (urls.length > 0) {\n      var entities = tags.concat(urls);\n      // remove overlap\n      removeOverlappingEntities(entities);\n      // only push back hashtags\n      tags = [];\n      for (var i = 0; i < entities.length; i++) {\n        if (entities[i].hashtag) {\n          tags.push(entities[i]);\n        }\n      }\n    }\n  }\n\n  return tags;\n};\n\nvar atSigns = /[@＠]/;\n\nvar endMentionMatch = regexSupplant(/^(?:#{atSigns}|[#{latinAccentChars}]|:\\/\\/)/, { atSigns: atSigns, latinAccentChars: latinAccentChars });\n\nvar validMentionPrecedingChars = /(?:^|[^a-zA-Z0-9_!#$%&*@＠]|(?:^|[^a-zA-Z0-9_+~.-])(?:rt|RT|rT|Rt):?)/;\n\nvar validMentionOrList = regexSupplant('(#{validMentionPrecedingChars})' + // $1: Preceding character\n'(#{atSigns})' + // $2: At mark\n'([a-zA-Z0-9_]{1,20})' + // $3: Screen name\n'(\\/[a-zA-Z][a-zA-Z0-9_\\-]{0,24})?', // $4: List (optional)\n{ validMentionPrecedingChars: validMentionPrecedingChars, atSigns: atSigns }, 'g');\n\nvar extractMentionsOrListsWithIndices = function (text) {\n  if (!text || !text.match(atSigns)) {\n    return [];\n  }\n\n  var possibleNames = [];\n\n  text.replace(validMentionOrList, function (match, before, atSign, screenName, slashListname, offset, chunk) {\n    var after = chunk.slice(offset + match.length);\n    if (!after.match(endMentionMatch)) {\n      slashListname = slashListname || '';\n      var startPosition = offset + before.length;\n      var endPosition = startPosition + screenName.length + slashListname.length + 1;\n      possibleNames.push({\n        screenName: screenName,\n        listSlug: slashListname,\n        indices: [startPosition, endPosition]\n      });\n    }\n  });\n\n  return possibleNames;\n};\n\nvar extractEntitiesWithIndices = function (text, options) {\n  var entities = extractUrlsWithIndices(text, options).concat(extractMentionsOrListsWithIndices(text)).concat(extractHashtagsWithIndices(text, { checkUrlOverlap: false })).concat(extractCashtagsWithIndices(text));\n\n  if (entities.length == 0) {\n    return [];\n  }\n\n  removeOverlappingEntities(entities);\n  return entities;\n};\n\nvar clone = function (o) {\n  var r = {};\n  for (var k in o) {\n    if (o.hasOwnProperty(k)) {\n      r[k] = o[k];\n    }\n  }\n\n  return r;\n};\n\nvar BOOLEAN_ATTRIBUTES = {\n  'disabled': true,\n  'readonly': true,\n  'multiple': true,\n  'checked': true\n};\n\n// Options which should not be passed as HTML attributes\nvar OPTIONS_NOT_ATTRIBUTES = {\n  'urlClass': true,\n  'listClass': true,\n  'usernameClass': true,\n  'hashtagClass': true,\n  'cashtagClass': true,\n  'usernameUrlBase': true,\n  'listUrlBase': true,\n  'hashtagUrlBase': true,\n  'cashtagUrlBase': true,\n  'usernameUrlBlock': true,\n  'listUrlBlock': true,\n  'hashtagUrlBlock': true,\n  'linkUrlBlock': true,\n  'usernameIncludeSymbol': true,\n  'suppressLists': true,\n  'suppressNoFollow': true,\n  'targetBlank': true,\n  'suppressDataScreenName': true,\n  'urlEntities': true,\n  'symbolTag': true,\n  'textWithSymbolTag': true,\n  'urlTarget': true,\n  'invisibleTagAttrs': true,\n  'linkAttributeBlock': true,\n  'linkTextBlock': true,\n  'htmlEscapeNonEntities': true\n};\n\nvar extractHtmlAttrsFromOptions = function (options) {\n  var htmlAttrs = {};\n  for (var k in options) {\n    var v = options[k];\n    if (OPTIONS_NOT_ATTRIBUTES[k]) {\n      continue;\n    }\n    if (BOOLEAN_ATTRIBUTES[k]) {\n      v = v ? k : null;\n    }\n    if (v == null) {\n      continue;\n    }\n    htmlAttrs[k] = v;\n  }\n  return htmlAttrs;\n};\n\nvar HTML_ENTITIES = {\n  '&': '&amp;',\n  '>': '&gt;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nvar htmlEscape = function (text) {\n  return text && text.replace(/[&\"'><]/g, function (character) {\n    return HTML_ENTITIES[character];\n  });\n};\n\nvar BOOLEAN_ATTRIBUTES$1 = {\n  'disabled': true,\n  'readonly': true,\n  'multiple': true,\n  'checked': true\n};\n\nvar tagAttrs = function (attributes) {\n  var htmlAttrs = '';\n  for (var k in attributes) {\n    var v = attributes[k];\n    if (BOOLEAN_ATTRIBUTES$1[k]) {\n      v = v ? k : null;\n    }\n    if (v == null) {\n      continue;\n    }\n    htmlAttrs += ' ' + htmlEscape(k) + '=\"' + htmlEscape(v.toString()) + '\"';\n  }\n  return htmlAttrs;\n};\n\nvar linkToText = function (entity, text, attributes, options) {\n  if (!options.suppressNoFollow) {\n    attributes.rel = 'nofollow';\n  }\n  // if linkAttributeBlock is specified, call it to modify the attributes\n  if (options.linkAttributeBlock) {\n    options.linkAttributeBlock(entity, attributes);\n  }\n  // if linkTextBlock is specified, call it to get a new/modified link text\n  if (options.linkTextBlock) {\n    text = options.linkTextBlock(entity, text);\n  }\n  var d = {\n    text: text,\n    attr: tagAttrs(attributes)\n  };\n  return stringSupplant('<a#{attr}>#{text}</a>', d);\n};\n\nvar linkToTextWithSymbol = function (entity, symbol, text, attributes, options) {\n  var taggedSymbol = options.symbolTag ? '<' + options.symbolTag + '>' + symbol + '</' + options.symbolTag + '>' : symbol;\n  text = htmlEscape(text);\n  var taggedText = options.textWithSymbolTag ? '<' + options.textWithSymbolTag + '>' + text + '</' + options.textWithSymbolTag + '>' : text;\n\n  if (options.usernameIncludeSymbol || !symbol.match(atSigns)) {\n    return linkToText(entity, taggedSymbol + taggedText, attributes, options);\n  } else {\n    return taggedSymbol + linkToText(entity, taggedText, attributes, options);\n  }\n};\n\nvar linkToCashtag = function (entity, text, options) {\n  var cashtag = htmlEscape(entity.cashtag);\n  var attrs = clone(options.htmlAttrs || {});\n  attrs.href = options.cashtagUrlBase + cashtag;\n  attrs.title = '$' + cashtag;\n  attrs['class'] = options.cashtagClass;\n  if (options.targetBlank) {\n    attrs.target = '_blank';\n  }\n\n  return linkToTextWithSymbol(entity, '$', cashtag, attrs, options);\n};\n\nvar rtlChars = /[\\u0600-\\u06FF]|[\\u0750-\\u077F]|[\\u0590-\\u05FF]|[\\uFE70-\\uFEFF]/mg;\n\nvar linkToHashtag = function (entity, text, options) {\n  var hash = text.substring(entity.indices[0], entity.indices[0] + 1);\n  var hashtag = htmlEscape(entity.hashtag);\n  var attrs = clone(options.htmlAttrs || {});\n  attrs.href = options.hashtagUrlBase + hashtag;\n  attrs.title = '#' + hashtag;\n  attrs['class'] = options.hashtagClass;\n  if (hashtag.charAt(0).match(rtlChars)) {\n    attrs['class'] += ' rtl';\n  }\n  if (options.targetBlank) {\n    attrs.target = '_blank';\n  }\n\n  return linkToTextWithSymbol(entity, hash, hashtag, attrs, options);\n};\n\nvar linkTextWithEntity = function (entity, options) {\n  var displayUrl = entity.display_url;\n  var expandedUrl = entity.expanded_url;\n\n  // Goal: If a user copies and pastes a tweet containing t.co'ed link, the resulting paste\n  // should contain the full original URL (expanded_url), not the display URL.\n  //\n  // Method: Whenever possible, we actually emit HTML that contains expanded_url, and use\n  // font-size:0 to hide those parts that should not be displayed (because they are not part of display_url).\n  // Elements with font-size:0 get copied even though they are not visible.\n  // Note that display:none doesn't work here. Elements with display:none don't get copied.\n  //\n  // Additionally, we want to *display* ellipses, but we don't want them copied.  To make this happen we\n  // wrap the ellipses in a tco-ellipsis class and provide an onCopy handler that sets display:none on\n  // everything with the tco-ellipsis class.\n  //\n  // Exception: pic.twitter.com images, for which expandedUrl = \"https://twitter.com/#!/username/status/1234/photo/1\n  // For those URLs, display_url is not a substring of expanded_url, so we don't do anything special to render the elided parts.\n  // For a pic.twitter.com URL, the only elided part will be the \"https://\", so this is fine.\n\n  var displayUrlSansEllipses = displayUrl.replace(/…/g, ''); // We have to disregard ellipses for matching\n  // Note: we currently only support eliding parts of the URL at the beginning or the end.\n  // Eventually we may want to elide parts of the URL in the *middle*.  If so, this code will\n  // become more complicated.  We will probably want to create a regexp out of display URL,\n  // replacing every ellipsis with a \".*\".\n  if (expandedUrl.indexOf(displayUrlSansEllipses) != -1) {\n    var displayUrlIndex = expandedUrl.indexOf(displayUrlSansEllipses);\n    var v = {\n      displayUrlSansEllipses: displayUrlSansEllipses,\n      // Portion of expandedUrl that precedes the displayUrl substring\n      beforeDisplayUrl: expandedUrl.substr(0, displayUrlIndex),\n      // Portion of expandedUrl that comes after displayUrl\n      afterDisplayUrl: expandedUrl.substr(displayUrlIndex + displayUrlSansEllipses.length),\n      precedingEllipsis: displayUrl.match(/^…/) ? '…' : '',\n      followingEllipsis: displayUrl.match(/…$/) ? '…' : ''\n    };\n    for (var k in v) {\n      if (v.hasOwnProperty(k)) {\n        v[k] = htmlEscape(v[k]);\n      }\n    }\n    // As an example: The user tweets \"hi http://longdomainname.com/foo\"\n    // This gets shortened to \"hi http://t.co/xyzabc\", with display_url = \"…nname.com/foo\"\n    // This will get rendered as:\n    // <span class='tco-ellipsis'> <!-- This stuff should get displayed but not copied -->\n    //   …\n    //   <!-- There's a chance the onCopy event handler might not fire. In case that happens,\n    //        we include an &nbsp; here so that the … doesn't bump up against the URL and ruin it.\n    //        The &nbsp; is inside the tco-ellipsis span so that when the onCopy handler *does*\n    //        fire, it doesn't get copied.  Otherwise the copied text would have two spaces in a row,\n    //        e.g. \"hi  http://longdomainname.com/foo\".\n    //   <span style='font-size:0'>&nbsp;</span>\n    // </span>\n    // <span style='font-size:0'>  <!-- This stuff should get copied but not displayed -->\n    //   http://longdomai\n    // </span>\n    // <span class='js-display-url'> <!-- This stuff should get displayed *and* copied -->\n    //   nname.com/foo\n    // </span>\n    // <span class='tco-ellipsis'> <!-- This stuff should get displayed but not copied -->\n    //   <span style='font-size:0'>&nbsp;</span>\n    //   …\n    // </span>\n    v['invisible'] = options.invisibleTagAttrs;\n    return stringSupplant(\"<span class='tco-ellipsis'>#{precedingEllipsis}<span #{invisible}>&nbsp;</span></span><span #{invisible}>#{beforeDisplayUrl}</span><span class='js-display-url'>#{displayUrlSansEllipses}</span><span #{invisible}>#{afterDisplayUrl}</span><span class='tco-ellipsis'><span #{invisible}>&nbsp;</span>#{followingEllipsis}</span>\", v);\n  }\n  return displayUrl;\n};\n\nvar urlHasProtocol = /^https?:\\/\\//i;\n\nvar linkToUrl = function (entity, text, options) {\n  var url = entity.url;\n  var displayUrl = url;\n  var linkText = htmlEscape(displayUrl);\n\n  // If the caller passed a urlEntities object (provided by a Twitter API\n  // response with include_entities=true), we use that to render the display_url\n  // for each URL instead of it's underlying t.co URL.\n  var urlEntity = options.urlEntities && options.urlEntities[url] || entity;\n  if (urlEntity.display_url) {\n    linkText = linkTextWithEntity(urlEntity, options);\n  }\n\n  var attrs = clone(options.htmlAttrs || {});\n\n  if (!url.match(urlHasProtocol)) {\n    url = 'http://' + url;\n  }\n  attrs.href = url;\n\n  if (options.targetBlank) {\n    attrs.target = '_blank';\n  }\n\n  // set class only if urlClass is specified.\n  if (options.urlClass) {\n    attrs['class'] = options.urlClass;\n  }\n\n  // set target only if urlTarget is specified.\n  if (options.urlTarget) {\n    attrs.target = options.urlTarget;\n  }\n\n  if (!options.title && urlEntity.display_url) {\n    attrs.title = urlEntity.expanded_url;\n  }\n\n  return linkToText(entity, linkText, attrs, options);\n};\n\nvar linkToMentionAndList = function (entity, text, options) {\n  var at = text.substring(entity.indices[0], entity.indices[0] + 1);\n  var user = htmlEscape(entity.screenName);\n  var slashListname = htmlEscape(entity.listSlug);\n  var isList = entity.listSlug && !options.suppressLists;\n  var attrs = clone(options.htmlAttrs || {});\n  attrs['class'] = isList ? options.listClass : options.usernameClass;\n  attrs.href = isList ? options.listUrlBase + user + slashListname : options.usernameUrlBase + user;\n  if (!isList && !options.suppressDataScreenName) {\n    attrs['data-screen-name'] = user;\n  }\n  if (options.targetBlank) {\n    attrs.target = '_blank';\n  }\n\n  return linkToTextWithSymbol(entity, at, isList ? user + slashListname : user, attrs, options);\n};\n\n// Default CSS class for auto-linked lists (along with the url class)\nvar DEFAULT_LIST_CLASS = 'tweet-url list-slug';\n// Default CSS class for auto-linked usernames (along with the url class)\nvar DEFAULT_USERNAME_CLASS = 'tweet-url username';\n// Default CSS class for auto-linked hashtags (along with the url class)\nvar DEFAULT_HASHTAG_CLASS = 'tweet-url hashtag';\n// Default CSS class for auto-linked cashtags (along with the url class)\nvar DEFAULT_CASHTAG_CLASS = 'tweet-url cashtag';\n\nvar autoLinkEntities = function (text, entities, options) {\n  var options = clone(options || {});\n  options.hashtagClass = options.hashtagClass || DEFAULT_HASHTAG_CLASS;\n  options.hashtagUrlBase = options.hashtagUrlBase || 'https://twitter.com/search?q=%23';\n  options.cashtagClass = options.cashtagClass || DEFAULT_CASHTAG_CLASS;\n  options.cashtagUrlBase = options.cashtagUrlBase || 'https://twitter.com/search?q=%24';\n  options.listClass = options.listClass || DEFAULT_LIST_CLASS;\n  options.usernameClass = options.usernameClass || DEFAULT_USERNAME_CLASS;\n  options.usernameUrlBase = options.usernameUrlBase || 'https://twitter.com/';\n  options.listUrlBase = options.listUrlBase || 'https://twitter.com/';\n  options.htmlAttrs = extractHtmlAttrsFromOptions(options);\n  options.invisibleTagAttrs = options.invisibleTagAttrs || \"style='position:absolute;left:-9999px;'\";\n\n  // remap url entities to hash\n  var urlEntities, i, len;\n  if (options.urlEntities) {\n    urlEntities = {};\n    for (i = 0, len = options.urlEntities.length; i < len; i++) {\n      urlEntities[options.urlEntities[i].url] = options.urlEntities[i];\n    }\n    options.urlEntities = urlEntities;\n  }\n\n  var result = '';\n  var beginIndex = 0;\n\n  // sort entities by start index\n  entities.sort(function (a, b) {\n    return a.indices[0] - b.indices[0];\n  });\n\n  var nonEntity = options.htmlEscapeNonEntities ? htmlEscape : function (text) {\n    return text;\n  };\n\n  for (var i = 0; i < entities.length; i++) {\n    var entity = entities[i];\n    result += nonEntity(text.substring(beginIndex, entity.indices[0]));\n\n    if (entity.url) {\n      result += linkToUrl(entity, text, options);\n    } else if (entity.hashtag) {\n      result += linkToHashtag(entity, text, options);\n    } else if (entity.screenName) {\n      result += linkToMentionAndList(entity, text, options);\n    } else if (entity.cashtag) {\n      result += linkToCashtag(entity, text, options);\n    }\n    beginIndex = entity.indices[1];\n  }\n  result += nonEntity(text.substring(beginIndex, text.length));\n  return result;\n};\n\nvar autoLink = function (text, options) {\n  var entities = extractEntitiesWithIndices(text, { extractUrlsWithoutProtocol: false });\n  return autoLinkEntities(text, entities, options);\n};\n\nvar autoLinkCashtags = function (text, options) {\n  var entities = extractCashtagsWithIndices(text);\n  return autoLinkEntities(text, entities, options);\n};\n\nvar autoLinkHashtags = function (text, options) {\n  var entities = extractHashtagsWithIndices(text);\n  return autoLinkEntities(text, entities, options);\n};\n\nvar autoLinkUrlsCustom = function (text, options) {\n  var entities = extractUrlsWithIndices(text, { extractUrlsWithoutProtocol: false });\n  return autoLinkEntities(text, entities, options);\n};\n\nvar autoLinkUsernamesOrLists = function (text, options) {\n  var entities = extractMentionsOrListsWithIndices(text);\n  return autoLinkEntities(text, entities, options);\n};\n\n/**\n * Copied from https://github.com/twitter/twitter-text/blob/master/js/twitter-text.js\n */\n\nvar convertUnicodeIndices = function convertUnicodeIndices(text, entities, indicesInUTF16) {\n  if (entities.length === 0) {\n    return;\n  }\n\n  var charIndex = 0;\n  var codePointIndex = 0;\n\n  // sort entities by start index\n  entities.sort(function (a, b) {\n    return a.indices[0] - b.indices[0];\n  });\n  var entityIndex = 0;\n  var entity = entities[0];\n\n  while (charIndex < text.length) {\n    if (entity.indices[0] === (indicesInUTF16 ? charIndex : codePointIndex)) {\n      var len = entity.indices[1] - entity.indices[0];\n      entity.indices[0] = indicesInUTF16 ? codePointIndex : charIndex;\n      entity.indices[1] = entity.indices[0] + len;\n\n      entityIndex++;\n      if (entityIndex === entities.length) {\n        // no more entity\n        break;\n      }\n      entity = entities[entityIndex];\n    }\n\n    var c = text.charCodeAt(charIndex);\n    if (c >= 0xD800 && c <= 0xDBFF && charIndex < text.length - 1) {\n      // Found high surrogate char\n      c = text.charCodeAt(charIndex + 1);\n      if (c >= 0xDC00 && c <= 0xDFFF) {\n        // Found surrogate pair\n        charIndex++;\n      }\n    }\n    codePointIndex++;\n    charIndex++;\n  }\n};\n\nvar modifyIndicesFromUnicodeToUTF16 = function (text, entities) {\n  convertUnicodeIndices(text, entities, false);\n};\n\nvar autoLinkWithJSON = function (text, json, options) {\n  // map JSON entity to twitter-text entity\n  if (json.user_mentions) {\n    for (var i = 0; i < json.user_mentions.length; i++) {\n      // this is a @mention\n      json.user_mentions[i].screenName = json.user_mentions[i].screen_name;\n    }\n  }\n\n  if (json.hashtags) {\n    for (var i = 0; i < json.hashtags.length; i++) {\n      // this is a #hashtag\n      json.hashtags[i].hashtag = json.hashtags[i].text;\n    }\n  }\n\n  if (json.symbols) {\n    for (var i = 0; i < json.symbols.length; i++) {\n      // this is a $CASH tag\n      json.symbols[i].cashtag = json.symbols[i].text;\n    }\n  }\n\n  // concatenate all entities\n  var entities = [];\n  for (var key in json) {\n    entities = entities.concat(json[key]);\n  }\n\n  // modify indices to UTF-16\n  modifyIndicesFromUnicodeToUTF16(text, entities);\n\n  return autoLinkEntities(text, entities, options);\n};\n\nvar version = 1;\nvar maxWeightedTweetLength = 140;\nvar scale = 1;\nvar defaultWeight = 1;\nvar transformedURLLength = 23;\nvar ranges = [];\nvar version1 = {\n\tversion: version,\n\tmaxWeightedTweetLength: maxWeightedTweetLength,\n\tscale: scale,\n\tdefaultWeight: defaultWeight,\n\ttransformedURLLength: transformedURLLength,\n\tranges: ranges\n};\n\nvar version$1 = 2;\nvar maxWeightedTweetLength$1 = 280;\nvar scale$1 = 100;\nvar defaultWeight$1 = 200;\nvar transformedURLLength$1 = 23;\nvar ranges$1 = [{\"start\":0,\"end\":4351,\"weight\":100},{\"start\":8192,\"end\":8205,\"weight\":100},{\"start\":8208,\"end\":8223,\"weight\":100},{\"start\":8242,\"end\":8247,\"weight\":100}];\nvar version2 = {\n\tversion: version$1,\n\tmaxWeightedTweetLength: maxWeightedTweetLength$1,\n\tscale: scale$1,\n\tdefaultWeight: defaultWeight$1,\n\ttransformedURLLength: transformedURLLength$1,\n\tranges: ranges$1\n};\n\n// These json files are created by the build script\nvar defaults = version2;\n\nvar configs = {\n  defaults: defaults,\n  version1: version1,\n  version2: version2\n};\n\nvar convertUnicodeIndices$2 = function (text, entities, indicesInUTF16) {\n  if (entities.length == 0) {\n    return;\n  }\n\n  var charIndex = 0;\n  var codePointIndex = 0;\n\n  // sort entities by start index\n  entities.sort(function (a, b) {\n    return a.indices[0] - b.indices[0];\n  });\n  var entityIndex = 0;\n  var entity = entities[0];\n\n  while (charIndex < text.length) {\n    if (entity.indices[0] == (indicesInUTF16 ? charIndex : codePointIndex)) {\n      var len = entity.indices[1] - entity.indices[0];\n      entity.indices[0] = indicesInUTF16 ? codePointIndex : charIndex;\n      entity.indices[1] = entity.indices[0] + len;\n\n      entityIndex++;\n      if (entityIndex == entities.length) {\n        // no more entity\n        break;\n      }\n      entity = entities[entityIndex];\n    }\n\n    var c = text.charCodeAt(charIndex);\n    if (c >= 0xD800 && c <= 0xDBFF && charIndex < text.length - 1) {\n      // Found high surrogate char\n      c = text.charCodeAt(charIndex + 1);\n      if (c >= 0xDC00 && c <= 0xDFFF) {\n        // Found surrogate pair\n        charIndex++;\n      }\n    }\n    codePointIndex++;\n    charIndex++;\n  }\n};\n\nvar extractCashtags = function (text) {\n  var cashtagsOnly = [],\n      cashtagsWithIndices = extractCashtagsWithIndices(text);\n\n  for (var i = 0; i < cashtagsWithIndices.length; i++) {\n    cashtagsOnly.push(cashtagsWithIndices[i].cashtag);\n  }\n\n  return cashtagsOnly;\n};\n\nvar extractHashtags = function (text) {\n  var hashtagsOnly = [];\n  var hashtagsWithIndices = extractHashtagsWithIndices(text);\n  for (var i = 0; i < hashtagsWithIndices.length; i++) {\n    hashtagsOnly.push(hashtagsWithIndices[i].hashtag);\n  }\n\n  return hashtagsOnly;\n};\n\nvar extractMentionsWithIndices = function (text) {\n  var mentions = [];\n  var mentionOrList = void 0;\n  var mentionsOrLists = extractMentionsOrListsWithIndices(text);\n\n  for (var i = 0; i < mentionsOrLists.length; i++) {\n    mentionOrList = mentionsOrLists[i];\n    if (mentionOrList.listSlug === '') {\n      mentions.push({\n        screenName: mentionOrList.screenName,\n        indices: mentionOrList.indices\n      });\n    }\n  }\n\n  return mentions;\n};\n\nvar extractMentions = function (text) {\n  var screenNamesOnly = [],\n      screenNamesWithIndices = extractMentionsWithIndices(text);\n\n  for (var i = 0; i < screenNamesWithIndices.length; i++) {\n    var screenName = screenNamesWithIndices[i].screenName;\n    screenNamesOnly.push(screenName);\n  }\n\n  return screenNamesOnly;\n};\n\nvar validReply = regexSupplant(/^(?:#{spaces})*#{atSigns}([a-zA-Z0-9_]{1,20})/, { atSigns: atSigns, spaces: spaces });\n\nvar extractReplies = function (text) {\n  if (!text) {\n    return null;\n  }\n\n  var possibleScreenName = text.match(validReply);\n  if (!possibleScreenName || RegExp.rightContext.match(endMentionMatch)) {\n    return null;\n  }\n\n  return possibleScreenName[1];\n};\n\nvar extractUrls = function (text, options) {\n  var urlsOnly = [];\n  var urlsWithIndices = extractUrlsWithIndices(text, options);\n\n  for (var i = 0; i < urlsWithIndices.length; i++) {\n    urlsOnly.push(urlsWithIndices[i].url);\n  }\n\n  return urlsOnly;\n};\n\nvar getCharacterWeight = function getCharacterWeight(ch, options) {\n  var defaultWeight = options.defaultWeight,\n      ranges = options.ranges;\n\n  var weight = defaultWeight;\n  var chCodePoint = ch.charCodeAt(0);\n  if (Array.isArray(ranges)) {\n    for (var i = 0, length = ranges.length; i < length; i++) {\n      var currRange = ranges[i];\n      if (chCodePoint >= currRange.start && chCodePoint <= currRange.end) {\n        weight = currRange.weight;\n        break;\n      }\n    }\n  }\n\n  return weight;\n};\n\nvar modifyIndicesFromUTF16ToUnicode = function (text, entities) {\n  convertUnicodeIndices(text, entities, true);\n};\n\nvar invalidChars = regexSupplant(/[#{invalidCharsGroup}]/, { invalidCharsGroup: invalidCharsGroup });\n\nvar hasInvalidCharacters = function (text) {\n  return invalidChars.test(text);\n};\n\nvar urlHasHttps = /^https:\\/\\//i;\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * [parseTweet description]\n * @param  {string} text    tweet text to parse\n * @param  {Object} options config options to pass\n * @return {Object} Fields in response described below:\n *\n * Response fields:\n * weightedLength {int} the weighted length of tweet based on weights specified in the config\n * valid {bool} If tweet is valid\n * permillage {float} permillage of the tweet over the max length specified in config\n * validRangeStart {int} beginning of valid text\n * validRangeEnd {int} End index of valid part of the tweet text (inclusive) in utf16\n * displayRangeStart {int} beginning index of display text\n * displayRangeEnd {int} end index of display text (inclusive) in utf16\n */\nvar parseTweet = function parseTweet() {\n  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : configs.defaults;\n\n  var mergedOptions = _extends({}, configs.defaults, options);\n  var defaultWeight = mergedOptions.defaultWeight,\n      scale = mergedOptions.scale,\n      maxWeightedTweetLength = mergedOptions.maxWeightedTweetLength,\n      transformedURLLength = mergedOptions.transformedURLLength;\n\n  var normalizedText = typeof String.prototype.normalize === 'function' ? text.normalize() : text;\n  var urlsWithIndices = extractUrlsWithIndices(normalizedText);\n  var tweetLength = normalizedText.length;\n\n  var weightedLength = 0;\n  var validDisplayIndex = 0;\n  var valid = true;\n  // Go through every character and calculate weight\n\n  var _loop = function _loop(_charIndex) {\n    // If a url begins at the specified index handle, add constant length\n    var urlEntity = urlsWithIndices.filter(function (_ref) {\n      var indices = _ref.indices;\n      return indices[0] === _charIndex;\n    })[0];\n    if (urlEntity) {\n      var url = urlEntity.url;\n\n      weightedLength += transformedURLLength * scale;\n      _charIndex += url.length - 1;\n    } else {\n      if (isSurrogatePair(normalizedText, _charIndex)) {\n        _charIndex += 1;\n      }\n      weightedLength += getCharacterWeight(normalizedText.charAt(_charIndex), mergedOptions);\n    }\n\n    // Only test for validity of character if it is still valid\n    if (valid) {\n      valid = !hasInvalidCharacters(normalizedText.substring(_charIndex, _charIndex + 1));\n    }\n    if (valid && weightedLength <= maxWeightedTweetLength * scale) {\n      validDisplayIndex = _charIndex;\n    }\n    charIndex = _charIndex;\n  };\n\n  for (var charIndex = 0; charIndex < tweetLength; charIndex++) {\n    _loop(charIndex);\n  }\n\n  weightedLength = weightedLength / scale;\n  valid = valid && weightedLength > 0 && weightedLength <= maxWeightedTweetLength;\n  var permillage = Math.floor(weightedLength / maxWeightedTweetLength * 1000);\n  var normalizationOffset = text.length - normalizedText.length;\n  validDisplayIndex += normalizationOffset;\n\n  return {\n    weightedLength: weightedLength,\n    valid: valid,\n    permillage: permillage,\n    validRangeStart: 0,\n    validRangeEnd: validDisplayIndex,\n    displayRangeStart: 0,\n    displayRangeEnd: text.length > 0 ? text.length - 1 : 0\n  };\n};\n\nvar isSurrogatePair = function isSurrogatePair(text, cIndex) {\n  // Test if a character is the beginning of a surrogate pair\n  if (cIndex < text.length - 1) {\n    var c = text.charCodeAt(cIndex);\n    var cNext = text.charCodeAt(cIndex + 1);\n    return 0xD800 <= c && c <= 0xDBFF && 0xDC00 <= cNext && cNext <= 0xDFFF;\n  }\n  return false;\n};\n\nvar getTweetLength = function getTweetLength(text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : configs.defaults;\n\n  return parseTweet(text, options).weightedLength;\n};\n\n/**\n * Copied from https://github.com/twitter/twitter-text/blob/master/js/twitter-text.js\n */\nvar getUnicodeTextLength = function (text) {\n  return text.replace(nonBmpCodePairs, ' ').length;\n};\n\n// this essentially does text.split(/<|>/)\n// except that won't work in IE, where empty strings are ommitted\n// so \"<>\".split(/<|>/) => [] in IE, but is [\"\", \"\", \"\"] in all others\n// but \"<<\".split(\"<\") => [\"\", \"\", \"\"]\nvar splitTags = function (text) {\n  var firstSplits = text.split('<'),\n      secondSplits = void 0,\n      allSplits = [],\n      split = void 0;\n\n  for (var i = 0; i < firstSplits.length; i += 1) {\n    split = firstSplits[i];\n    if (!split) {\n      allSplits.push('');\n    } else {\n      secondSplits = split.split('>');\n      for (var j = 0; j < secondSplits.length; j += 1) {\n        allSplits.push(secondSplits[j]);\n      }\n    }\n  }\n\n  return allSplits;\n};\n\nvar hitHighlight = function (text, hits, options) {\n  var defaultHighlightTag = 'em';\n\n  hits = hits || [];\n  options = options || {};\n\n  if (hits.length === 0) {\n    return text;\n  }\n\n  var tagName = options.tag || defaultHighlightTag,\n      tags = ['<' + tagName + '>', '</' + tagName + '>'],\n      chunks = splitTags(text),\n      i = void 0,\n      j = void 0,\n      result = '',\n      chunkIndex = 0,\n      chunk = chunks[0],\n      prevChunksLen = 0,\n      chunkCursor = 0,\n      startInChunk = false,\n      chunkChars = chunk,\n      flatHits = [],\n      index = void 0,\n      hit = void 0,\n      tag = void 0,\n      placed = void 0,\n      hitSpot = void 0;\n\n  for (i = 0; i < hits.length; i += 1) {\n    for (j = 0; j < hits[i].length; j += 1) {\n      flatHits.push(hits[i][j]);\n    }\n  }\n\n  for (index = 0; index < flatHits.length; index += 1) {\n    hit = flatHits[index];\n    tag = tags[index % 2];\n    placed = false;\n\n    while (chunk != null && hit >= prevChunksLen + chunk.length) {\n      result += chunkChars.slice(chunkCursor);\n      if (startInChunk && hit === prevChunksLen + chunkChars.length) {\n        result += tag;\n        placed = true;\n      }\n\n      if (chunks[chunkIndex + 1]) {\n        result += '<' + chunks[chunkIndex + 1] + '>';\n      }\n\n      prevChunksLen += chunkChars.length;\n      chunkCursor = 0;\n      chunkIndex += 2;\n      chunk = chunks[chunkIndex];\n      chunkChars = chunk;\n      startInChunk = false;\n    }\n\n    if (!placed && chunk != null) {\n      hitSpot = hit - prevChunksLen;\n      result += chunkChars.slice(chunkCursor, hitSpot) + tag;\n      chunkCursor = hitSpot;\n      if (index % 2 === 0) {\n        startInChunk = true;\n      } else {\n        startInChunk = false;\n      }\n    } else if (!placed) {\n      placed = true;\n      result += tag;\n    }\n  }\n\n  if (chunk != null) {\n    if (chunkCursor < chunkChars.length) {\n      result += chunkChars.slice(chunkCursor);\n    }\n    for (index = chunkIndex + 1; index < chunks.length; index += 1) {\n      result += index % 2 === 0 ? chunks[index] : '<' + chunks[index] + '>';\n    }\n  }\n\n  return result;\n};\n\nvar isInvalidTweet = function (text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : configs.defaults;\n\n  if (!text) {\n    return 'empty';\n  }\n\n  var mergedOptions = _extends({}, configs.defaults, options);\n  var maxLength = mergedOptions.maxWeightedTweetLength;\n\n  // Determine max length independent of URL length\n  if (getTweetLength(text, mergedOptions) > maxLength) {\n    return 'too_long';\n  }\n\n  if (hasInvalidCharacters(text)) {\n    return 'invalid_characters';\n  }\n\n  return false;\n};\n\nvar isValidHashtag = function (hashtag) {\n  if (!hashtag) {\n    return false;\n  }\n\n  var extracted = extractHashtags(hashtag);\n\n  // Should extract the hashtag minus the # sign, hence the .slice(1)\n  return extracted.length === 1 && extracted[0] === hashtag.slice(1);\n};\n\nvar VALID_LIST_RE = regexSupplant(/^#{validMentionOrList}$/, { validMentionOrList: validMentionOrList });\n\nvar isValidList = function (usernameList) {\n  var match = usernameList.match(VALID_LIST_RE);\n\n  // Must have matched and had nothing before or after\n  return !!(match && match[1] == '' && match[4]);\n};\n\nvar isValidTweetText = function (text, options) {\n  return !isInvalidTweet(text, options);\n};\n\nvar validateUrlUnreserved = /[a-z\\u0400-\\u04FF0-9\\-._~]/i;\n\nvar validateUrlPctEncoded = /(?:%[0-9a-f]{2})/i;\n\nvar validateUrlSubDelims = /[!$&'()*+,;=]/i;\n\nvar validateUrlUserinfo = regexSupplant('(?:' + '#{validateUrlUnreserved}|' + '#{validateUrlPctEncoded}|' + '#{validateUrlSubDelims}|' + ':' + ')*', { validateUrlUnreserved: validateUrlUnreserved, validateUrlPctEncoded: validateUrlPctEncoded, validateUrlSubDelims: validateUrlSubDelims }, 'i');\n\nvar validateUrlDomainSegment = /(?:[a-z0-9](?:[a-z0-9\\-]*[a-z0-9])?)/i;\n\nvar validateUrlDomainTld = /(?:[a-z](?:[a-z0-9\\-]*[a-z0-9])?)/i;\n\nvar validateUrlSubDomainSegment = /(?:[a-z0-9](?:[a-z0-9_\\-]*[a-z0-9])?)/i;\n\nvar validateUrlDomain = regexSupplant(/(?:(?:#{validateUrlSubDomainSegment}\\.)*(?:#{validateUrlDomainSegment}\\.)#{validateUrlDomainTld})/i, { validateUrlSubDomainSegment: validateUrlSubDomainSegment, validateUrlDomainSegment: validateUrlDomainSegment, validateUrlDomainTld: validateUrlDomainTld });\n\nvar validateUrlDecOctet = /(?:[0-9]|(?:[1-9][0-9])|(?:1[0-9]{2})|(?:2[0-4][0-9])|(?:25[0-5]))/i;\n\nvar validateUrlIpv4 = regexSupplant(/(?:#{validateUrlDecOctet}(?:\\.#{validateUrlDecOctet}){3})/i, { validateUrlDecOctet: validateUrlDecOctet });\n\n// Punting on real IPv6 validation for now\nvar validateUrlIpv6 = /(?:\\[[a-f0-9:\\.]+\\])/i;\n\n// Punting on IPvFuture for now\nvar validateUrlIp = regexSupplant('(?:' + '#{validateUrlIpv4}|' + '#{validateUrlIpv6}' + ')', { validateUrlIpv4: validateUrlIpv4, validateUrlIpv6: validateUrlIpv6 }, 'i');\n\nvar validateUrlHost = regexSupplant('(?:' + '#{validateUrlIp}|' + '#{validateUrlDomain}' + ')', { validateUrlIp: validateUrlIp, validateUrlDomain: validateUrlDomain }, 'i');\n\nvar validateUrlPort = /[0-9]{1,5}/;\n\nvar validateUrlAuthority = regexSupplant(\n// $1 userinfo\n'(?:(#{validateUrlUserinfo})@)?' +\n// $2 host\n'(#{validateUrlHost})' +\n// $3 port\n'(?::(#{validateUrlPort}))?', { validateUrlUserinfo: validateUrlUserinfo, validateUrlHost: validateUrlHost, validateUrlPort: validateUrlPort }, 'i');\n\n// These URL validation pattern strings are based on the ABNF from RFC 3986\nvar validateUrlPchar = regexSupplant('(?:' + '#{validateUrlUnreserved}|' + '#{validateUrlPctEncoded}|' + '#{validateUrlSubDelims}|' + '[:|@]' + ')', { validateUrlUnreserved: validateUrlUnreserved, validateUrlPctEncoded: validateUrlPctEncoded, validateUrlSubDelims: validateUrlSubDelims }, 'i');\n\nvar validateUrlFragment = regexSupplant(/(#{validateUrlPchar}|\\/|\\?)*/i, { validateUrlPchar: validateUrlPchar });\n\nvar validateUrlPath = regexSupplant(/(\\/#{validateUrlPchar}*)*/i, { validateUrlPchar: validateUrlPchar });\n\nvar validateUrlQuery = regexSupplant(/(#{validateUrlPchar}|\\/|\\?)*/i, { validateUrlPchar: validateUrlPchar });\n\nvar validateUrlScheme = /(?:[a-z][a-z0-9+\\-.]*)/i;\n\n// Modified version of RFC 3986 Appendix B\nvar validateUrlUnencoded = regexSupplant('^' + // Full URL\n'(?:' + '([^:/?#]+):\\\\/\\\\/' + // $1 Scheme\n')?' + '([^/?#]*)' + // $2 Authority\n'([^?#]*)' + // $3 Path\n'(?:' + '\\\\?([^#]*)' + // $4 Query\n')?' + '(?:' + '#(.*)' + // $5 Fragment\n')?$', 'i');\n\nvar validateUrlUnicodeSubDomainSegment = /(?:(?:[a-z0-9]|[^\\u0000-\\u007f])(?:(?:[a-z0-9_\\-]|[^\\u0000-\\u007f])*(?:[a-z0-9]|[^\\u0000-\\u007f]))?)/i;\n\nvar validateUrlUnicodeDomainSegment = /(?:(?:[a-z0-9]|[^\\u0000-\\u007f])(?:(?:[a-z0-9\\-]|[^\\u0000-\\u007f])*(?:[a-z0-9]|[^\\u0000-\\u007f]))?)/i;\n\n// Unencoded internationalized domains - this doesn't check for invalid UTF-8 sequences\nvar validateUrlUnicodeDomainTld = /(?:(?:[a-z]|[^\\u0000-\\u007f])(?:(?:[a-z0-9\\-]|[^\\u0000-\\u007f])*(?:[a-z0-9]|[^\\u0000-\\u007f]))?)/i;\n\n// Unencoded internationalized domains - this doesn't check for invalid UTF-8 sequences\nvar validateUrlUnicodeDomain = regexSupplant(/(?:(?:#{validateUrlUnicodeSubDomainSegment}\\.)*(?:#{validateUrlUnicodeDomainSegment}\\.)#{validateUrlUnicodeDomainTld})/i, { validateUrlUnicodeSubDomainSegment: validateUrlUnicodeSubDomainSegment, validateUrlUnicodeDomainSegment: validateUrlUnicodeDomainSegment, validateUrlUnicodeDomainTld: validateUrlUnicodeDomainTld });\n\nvar validateUrlUnicodeHost = regexSupplant('(?:' + '#{validateUrlIp}|' + '#{validateUrlUnicodeDomain}' + ')', { validateUrlIp: validateUrlIp, validateUrlUnicodeDomain: validateUrlUnicodeDomain }, 'i');\n\nvar validateUrlUnicodeAuthority = regexSupplant(\n// $1 userinfo\n'(?:(#{validateUrlUserinfo})@)?' +\n// $2 host\n'(#{validateUrlUnicodeHost})' +\n// $3 port\n'(?::(#{validateUrlPort}))?', { validateUrlUserinfo: validateUrlUserinfo, validateUrlUnicodeHost: validateUrlUnicodeHost, validateUrlPort: validateUrlPort }, 'i');\n\nfunction isValidMatch(string, regex, optional) {\n  if (!optional) {\n    // RegExp[\"$&\"] is the text of the last match\n    // blank strings are ok, but are falsy, so we check stringiness instead of truthiness\n    return typeof string === 'string' && string.match(regex) && RegExp['$&'] === string;\n  }\n\n  // RegExp[\"$&\"] is the text of the last match\n  return !string || string.match(regex) && RegExp['$&'] === string;\n}\n\nvar isValidUrl$1 = function (url, unicodeDomains, requireProtocol) {\n  if (unicodeDomains == null) {\n    unicodeDomains = true;\n  }\n\n  if (requireProtocol == null) {\n    requireProtocol = true;\n  }\n\n  if (!url) {\n    return false;\n  }\n\n  var urlParts = url.match(validateUrlUnencoded);\n\n  if (!urlParts || urlParts[0] !== url) {\n    return false;\n  }\n\n  var scheme = urlParts[1],\n      authority = urlParts[2],\n      path = urlParts[3],\n      query = urlParts[4],\n      fragment = urlParts[5];\n\n  if (!((!requireProtocol || isValidMatch(scheme, validateUrlScheme) && scheme.match(/^https?$/i)) && isValidMatch(path, validateUrlPath) && isValidMatch(query, validateUrlQuery, true) && isValidMatch(fragment, validateUrlFragment, true))) {\n    return false;\n  }\n\n  return unicodeDomains && isValidMatch(authority, validateUrlUnicodeAuthority) || !unicodeDomains && isValidMatch(authority, validateUrlAuthority);\n};\n\nvar isValidUsername = function (username) {\n  if (!username) {\n    return false;\n  }\n\n  var extracted = extractMentions(username);\n\n  // Should extract the username minus the @ sign, hence the .slice(1)\n  return extracted.length === 1 && extracted[0] === username.slice(1);\n};\n\n(function () {\n  if (typeof Object.assign != 'function') {\n    // Must be writable: true, enumerable: false, configurable: true\n    Object.defineProperty(Object, \"assign\", {\n      value: function assign(target, varArgs) {\n        // .length of function is 2\n        'use strict';\n\n        if (target == null) {\n          // TypeError if undefined or null\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var to = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var nextSource = arguments[index];\n\n          if (nextSource != null) {\n            // Skip over if undefined or null\n            for (var nextKey in nextSource) {\n              // Avoid bugs when hasOwnProperty is shadowed\n              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n        return to;\n      },\n      writable: true,\n      configurable: true\n    });\n  }\n})();\n\nvar regexen = {\n  astralLetterAndMarks: astralLetterAndMarks,\n  astralNumerals: astralNumerals,\n  atSigns: atSigns,\n  bmpLetterAndMarks: bmpLetterAndMarks,\n  bmpNumerals: bmpNumerals,\n  cashtag: cashtag,\n  codePoint: codePoint,\n  cyrillicLettersAndMarks: cyrillicLettersAndMarks,\n  endHashtagMatch: endHashtagMatch,\n  endMentionMatch: endMentionMatch,\n  // extractUrl,\n  hashSigns: hashSigns,\n  hashtagAlpha: hashtagAlpha,\n  hashtagAlphaNumeric: hashtagAlphaNumeric,\n  hashtagBoundary: hashtagBoundary,\n  hashtagSpecialChars: hashtagSpecialChars,\n  invalidChars: invalidChars,\n  invalidCharsGroup: invalidCharsGroup,\n  invalidDomainChars: invalidDomainChars,\n  invalidUrlWithoutProtocolPrecedingChars: invalidUrlWithoutProtocolPrecedingChars,\n  latinAccentChars: latinAccentChars,\n  nonBmpCodePairs: nonBmpCodePairs,\n  punct: punct,\n  rtlChars: rtlChars,\n  spaces: spaces,\n  spacesGroup: spacesGroup,\n  urlHasHttps: urlHasHttps,\n  urlHasProtocol: urlHasProtocol,\n  validAsciiDomain: validAsciiDomain,\n  validateUrlAuthority: validateUrlAuthority,\n  validateUrlDecOctet: validateUrlDecOctet,\n  validateUrlDomain: validateUrlDomain,\n  validateUrlDomainSegment: validateUrlDomainSegment,\n  validateUrlDomainTld: validateUrlDomainTld,\n  validateUrlFragment: validateUrlFragment,\n  validateUrlHost: validateUrlHost,\n  validateUrlIp: validateUrlIp,\n  validateUrlIpv4: validateUrlIpv4,\n  validateUrlIpv6: validateUrlIpv6,\n  validateUrlPath: validateUrlPath,\n  validateUrlPchar: validateUrlPchar,\n  validateUrlPctEncoded: validateUrlPctEncoded,\n  validateUrlPort: validateUrlPort,\n  validateUrlQuery: validateUrlQuery,\n  validateUrlScheme: validateUrlScheme,\n  validateUrlSubDelims: validateUrlSubDelims,\n  validateUrlSubDomainSegment: validateUrlSubDomainSegment,\n  validateUrlUnencoded: validateUrlUnencoded,\n  validateUrlUnicodeAuthority: validateUrlUnicodeAuthority,\n  validateUrlUnicodeDomain: validateUrlUnicodeDomain,\n  validateUrlUnicodeDomainSegment: validateUrlUnicodeDomainSegment,\n  validateUrlUnicodeDomainTld: validateUrlUnicodeDomainTld,\n  validateUrlUnicodeHost: validateUrlUnicodeHost,\n  validateUrlUnicodeSubDomainSegment: validateUrlUnicodeSubDomainSegment,\n  validateUrlUnreserved: validateUrlUnreserved,\n  validateUrlUserinfo: validateUrlUserinfo,\n  validCashtag: validCashtag,\n  validCCTLD: validCCTLD,\n  validDomain: validDomain,\n  validDomainChars: validDomainChars,\n  validDomainName: validDomainName,\n  validGeneralUrlPathChars: validGeneralUrlPathChars,\n  validGTLD: validGTLD,\n  validHashtag: validHashtag,\n  validMentionOrList: validMentionOrList,\n  validMentionPrecedingChars: validMentionPrecedingChars,\n  validPortNumber: validPortNumber,\n  validPunycode: validPunycode,\n  validReply: validReply,\n  validSubdomain: validSubdomain,\n  validTcoUrl: validTcoUrl,\n  validUrlBalancedParens: validUrlBalancedParens,\n  validUrlPath: validUrlPath,\n  validUrlPathEndingChars: validUrlPathEndingChars,\n  validUrlPrecedingChars: validUrlPrecedingChars,\n  validUrlQueryChars: validUrlQueryChars,\n  validUrlQueryEndingChars: validUrlQueryEndingChars\n};\n\nvar index = {\n  autoLink: autoLink,\n  autoLinkCashtags: autoLinkCashtags,\n  autoLinkEntities: autoLinkEntities,\n  autoLinkHashtags: autoLinkHashtags,\n  autoLinkUrlsCustom: autoLinkUrlsCustom,\n  autoLinkUsernamesOrLists: autoLinkUsernamesOrLists,\n  autoLinkWithJSON: autoLinkWithJSON,\n  configs: configs,\n  convertUnicodeIndices: convertUnicodeIndices$2,\n  extractCashtags: extractCashtags,\n  extractCashtagsWithIndices: extractCashtagsWithIndices,\n  extractEntitiesWithIndices: extractEntitiesWithIndices,\n  extractHashtags: extractHashtags,\n  extractHashtagsWithIndices: extractHashtagsWithIndices,\n  extractHtmlAttrsFromOptions: extractHtmlAttrsFromOptions,\n  extractMentions: extractMentions,\n  extractMentionsOrListsWithIndices: extractMentionsOrListsWithIndices,\n  extractMentionsWithIndices: extractMentionsWithIndices,\n  extractReplies: extractReplies,\n  extractUrls: extractUrls,\n  extractUrlsWithIndices: extractUrlsWithIndices,\n  getTweetLength: getTweetLength,\n  getUnicodeTextLength: getUnicodeTextLength,\n  hasInvalidCharacters: hasInvalidCharacters,\n  hitHighlight: hitHighlight,\n  htmlEscape: htmlEscape,\n  isInvalidTweet: isInvalidTweet,\n  isValidHashtag: isValidHashtag,\n  isValidList: isValidList,\n  isValidTweetText: isValidTweetText,\n  isValidUrl: isValidUrl$1,\n  isValidUsername: isValidUsername,\n  linkTextWithEntity: linkTextWithEntity,\n  linkToCashtag: linkToCashtag,\n  linkToHashtag: linkToHashtag,\n  linkToMentionAndList: linkToMentionAndList,\n  linkToText: linkToText,\n  linkToTextWithSymbol: linkToTextWithSymbol,\n  linkToUrl: linkToUrl,\n  modifyIndicesFromUTF16ToUnicode: modifyIndicesFromUTF16ToUnicode,\n  modifyIndicesFromUnicodeToUTF16: modifyIndicesFromUnicodeToUTF16,\n  regexen: regexen,\n  removeOverlappingEntities: removeOverlappingEntities,\n  parseTweet: parseTweet,\n  splitTags: splitTags,\n  tagAttrs: tagAttrs\n};\n\nreturn index;\n\n})));\n"],"sourceRoot":""}